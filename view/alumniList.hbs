<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Alumni Directory</title>
    <link rel="icon" href="https://your-favicon-url.png">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        @import url("https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap");

        :root {
            --primary: #4338ca;
            --primary-dark: #4f46e5;
            --secondary: #f43f5e;
            --dark: #1e293b;
            --light: #f8fafc;
            --gray: #64748b;
            --gray-light: #e2e8f0;
            --success: #10b981;
            --warning: #f59e0b;
            --info: #0ea5e9;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: "Inter", sans-serif;
        }

        body {
            background-color: #f1f5f9;
            color: var(--dark);
            height: 100vh;
            overflow: hidden;
        }

        .app-container {
            display: flex;
            flex-direction: column;
            height: 100vh;
            overflow: hidden;
        }

        /* Header */
        .app-header {
            background-color: white;
            padding: 1rem 2rem;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
            z-index: 100;
            display: flex;
            align-items: center;
        }

        .app-title {
            font-weight: 700;
            font-size: 1.5rem;
            color: var(--dark);
            margin: 0;
            margin-left: 1rem;
        }

        .app-title span {
            color: var(--primary);
        }

        .back-btn {
            color: var(--gray);
            background: none;
            border: none;
            font-size: 1.25rem;
            cursor: pointer;
            transition: color 0.2s;
            padding: 0.5rem;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .back-btn:hover {
            color: var(--primary);
            background-color: rgba(99, 102, 241, 0.1);
        }

        /* Main content */
        .main-content {
            display: flex;
            flex-direction: column;
            flex: 1;
            overflow: hidden;
        }

        /* Filter section */
        .filter-section {
            background-color: white;
            padding: 1rem 1.5rem;
            margin: 1rem;
            border-radius: 0.75rem;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        }

        .filter-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1rem;
        }

        .filter-title {
            font-size: 1rem;
            font-weight: 600;
            color: var(--dark);
            display: flex;
            align-items: center;
            margin: 0;
        }

        .filter-title i {
            margin-right: 0.5rem;
            color: var(--primary);
        }

        .filter-form .form-label {
            font-weight: 500;
            color: var(--dark);
            margin-bottom: 0.25rem;
            font-size: 0.875rem;
        }

        .form-control, .form-select {
            border-radius: 0.5rem;
            padding: 0.5rem 0.75rem;
            border: 1px solid var(--gray-light);
            font-size: 0.875rem;
        }

        .form-control:focus, .form-select:focus {
            border-color: var(--primary);
            box-shadow: 0 0 0 0.25rem rgba(99, 102, 241, 0.25);
        }

        .fetch-btn {
            background-color: var(--primary);
            border-color: var(--primary);
            font-weight: 500;
            padding: 0.5rem 1rem;
            border-radius: 0.5rem;
            transition: all 0.2s;
            font-size: 0.875rem;
        }

        .fetch-btn:hover, .fetch-btn:focus {
            background-color: var(--primary-dark);
            border-color: var(--primary-dark);
            transform: translateY(-2px);
        }

        .fetch-btn i {
            margin-right: 0.5rem;
        }

        .reset-btn {
            background-color: white;
            border-color: var(--gray-light);
            color: var(--gray);
            font-weight: 500;
            padding: 0.5rem 1rem;
            border-radius: 0.5rem;
            transition: all 0.2s;
            font-size: 0.875rem;
        }

        .reset-btn:hover {
            background-color: var(--gray-light);
            color: var(--dark);
        }

        .reset-btn i {
            margin-right: 0.5rem;
        }

        /* Table section */
        .table-section {
            flex: 1;
            overflow: hidden;
            padding: 0 1rem 1rem 1rem;
            display: flex;
            flex-direction: column;
        }

        .table-card {
            background-color: white;
            border-radius: 0.75rem;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            flex: 1;
            display: flex;
            flex-direction: column;
        }

        .table-header {
            padding: 1rem 1.5rem;
            border-bottom: 1px solid var(--gray-light);
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .table-title {
            font-size: 1.125rem;
            font-weight: 600;
            margin: 0;
            color: var(--dark);
        }

        .table-count {
            background-color: var(--primary);
            color: white;
            padding: 0.25rem 0.75rem;
            border-radius: 1rem;
            font-size: 0.875rem;
            font-weight: 500;
        }

        .table-container {
            flex: 1;
            overflow: auto;
        }

        .alumni-table {
            width: 100%;
            border-collapse: collapse;
        }

        .alumni-table th {
            background-color: #f8fafc;
            color: var(--dark);
            font-weight: 600;
            text-align: left;
            padding: 1rem 1.5rem;
            border-bottom: 1px solid var(--gray-light);
            position: sticky;
            top: 0;
            z-index: 10;
        }

        .alumni-table td {
            padding: 1rem 1.5rem;
            border-bottom: 1px solid var(--gray-light);
            color: var(--gray);
        }

        .alumni-table tr:hover td {
            background-color: #f1f5f9;
        }

        .alumni-table .name-cell {
            font-weight: 500;
            color: var(--dark);
        }

        .alumni-table .course-badge {
            background-color: #e0e7ff;
            color: var(--primary-dark);
            padding: 0.25rem 0.75rem;
            border-radius: 1rem;
            font-size: 0.75rem;
            font-weight: 500;
            display: inline-block;
        }

        .alumni-table .gender-badge {
            padding: 0.25rem 0.75rem;
            border-radius: 1rem;
            font-size: 0.75rem;
            font-weight: 500;
            display: inline-block;
        }

        .alumni-table .gender-badge.male {
            background-color: #dbeafe;
            color: #2563eb;
        }

        .alumni-table .gender-badge.female {
            background-color: #fce7f3;
            color: #db2777;
        }

        .view-btn {
            background-color: var(--primary);
            color: white;
            border: none;
            border-radius: 0.375rem;
            padding: 0.375rem 0.75rem;
            font-size: 0.875rem;
            cursor: pointer;
            transition: all 0.2s;
        }

        .view-btn:hover {
            background-color: var(--primary-dark);
            transform: translateY(-2px);
        }

        .view-btn i {
            margin-right: 0.25rem;
        }

        /* Skeleton loading */
        .skeleton {
            animation: skeleton-loading 1.5s ease infinite;
            background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
            background-size: 200% 100%;
            border-radius: 0.25rem;
        }

        .skeleton-row td {
            padding: 1rem 1.5rem;
            border-bottom: 1px solid var(--gray-light);
        }

        .skeleton-text {
            height: 1rem;
            margin: 0.25rem 0;
            border-radius: 0.25rem;
        }

        .skeleton-text.sm {
            width: 30%;
        }

        .skeleton-text.md {
            width: 50%;
        }

        .skeleton-text.lg {
            width: 70%;
        }

        .skeleton-text.xl {
            width: 85%;
        }

        .skeleton-badge {
            height: 1.5rem;
            width: 4rem;
            border-radius: 1rem;
            display: inline-block;
        }

        .skeleton-button {
            height: 2rem;
            width: 5rem;
            border-radius: 0.375rem;
        }

        @keyframes skeleton-loading {
            0% {
                background-position: 200% 0;
            }
            100% {
                background-position: -200% 0;
            }
        }

        /* Empty state */
        .empty-state {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            padding: 3rem;
            text-align: center;
        }

        .empty-state-icon {
            font-size: 3rem;
            color: var(--gray-light);
            margin-bottom: 1rem;
        }

        .empty-state-title {
            font-size: 1.25rem;
            font-weight: 600;
            color: var(--dark);
            margin-bottom: 0.5rem;
        }

        .empty-state-text {
            color: var(--gray);
            max-width: 24rem;
            margin-bottom: 1.5rem;
        }

        /* Modal */
        .modal-content {
            border-radius: 0.75rem;
            border: none;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
            overflow: hidden;
        }

        .modal-header {
            background-color: var(--primary);
            color: white;
            border-bottom: none;
            padding: 1.25rem 1.5rem;
        }

        .modal-title {
            font-weight: 600;
        }

        .btn-close {
            color: white;
            filter: brightness(0) invert(1);
            opacity: 0.8;
        }

        .modal-body {
            padding: 0;
        }

        /* Student Details Styling */
        .student-profile {
            display: flex;
            flex-direction: column;
            align-items: center;
            padding: 2rem 1.5rem;
            background-color: #f8fafc;
            position: relative;
        }

        .profile-image {
            width: 120px;
            height: 120px;
            border-radius: 50%;
            object-fit: cover;
            border: 4px solid white;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            margin-bottom: 1rem;
        }

        .profile-name {
            font-size: 1.5rem;
            font-weight: 700;
            color: var(--dark);
            margin-bottom: 0.25rem;
        }

        .profile-id {
            font-size: 0.875rem;
            color: var(--gray);
            margin-bottom: 0.75rem;
        }

        .profile-badges {
            display: flex;
            gap: 0.5rem;
            margin-bottom: 0.5rem;
        }

        .profile-badge {
            padding: 0.25rem 0.75rem;
            border-radius: 1rem;
            font-size: 0.75rem;
            font-weight: 500;
        }

        .profile-badge.course {
            background-color: #e0e7ff;
            color: var(--primary-dark);
        }

        .profile-badge.year {
            background-color: #f0fdf4;
            color: #16a34a;
        }

        .profile-badge.gender {
            background-color: #dbeafe;
            color: #2563eb;
        }

        .profile-badge.gender.female {
            background-color: #fce7f3;
            color: #db2777;
        }

        .student-details-tabs {
            display: flex;
            border-bottom: 1px solid var(--gray-light);
            background-color: white;
        }

        .student-details-tab {
            padding: 1rem 1.5rem;
            font-weight: 500;
            color: var(--gray);
            cursor: pointer;
            border-bottom: 2px solid transparent;
            transition: all 0.2s;
        }

        .student-details-tab.active {
            color: var(--primary);
            border-bottom-color: var(--primary);
        }

        .student-details-content {
            padding: 1.5rem;
            max-height: 400px;
            overflow-y: auto;
        }

        .details-section {
            margin-bottom: 1.5rem;
        }

        .details-section:last-child {
            margin-bottom: 0;
        }

        .details-section-title {
            font-size: 0.875rem;
            font-weight: 600;
            color: var(--gray);
            text-transform: uppercase;
            letter-spacing: 0.05em;
            margin-bottom: 1rem;
        }

        .details-grid {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 1rem;
        }

        .details-item {
            margin-bottom: 1rem;
        }

        .details-label {
            font-size: 0.75rem;
            color: var(--gray);
            margin-bottom: 0.25rem;
        }

        .details-value {
            font-size: 0.9375rem;
            color: var(--dark);
            font-weight: 500;
        }

        .details-value.address {
            grid-column: span 2;
        }

        .modal-footer {
            padding: 1rem 1.5rem;
            border-top: 1px solid var(--gray-light);
        }

        .modal-footer .btn {
            font-weight: 500;
            padding: 0.5rem 1.25rem;
            border-radius: 0.5rem;
        }

        /* Responsive */
        @media (max-width: 992px) {
            .details-grid {
                grid-template-columns: 1fr;
            }
            
            .details-value.address {
                grid-column: span 1;
            }
        }

        @media (max-width: 768px) {
            .app-header {
                padding: 1rem;
            }
            
            .app-title {
                font-size: 1.25rem;
            }
            
            .filter-section, .table-section {
                padding: 0.5rem;
                margin: 0.5rem;
            }
            
            .filter-title {
                font-size: 1rem;
            }
            
            .alumni-table th, .alumni-table td {
                padding: 0.75rem 1rem;
            }
            
            .profile-image {
                width: 100px;
                height: 100px;
            }
            
            .profile-name {
                font-size: 1.25rem;
            }
        }

        @media (max-width: 576px) {
            .app-title {
                font-size: 1rem;
            }
            
            .filter-section {
                padding: 1rem;
            }
            
            .alumni-table {
                min-width: 800px;
            }
            
            .student-details-tab {
                padding: 0.75rem 1rem;
                font-size: 0.875rem;
            }
        }
    </style>
</head>
<body>
    <div class="app-container">
        <!-- Header -->
        <header class="app-header">
            <button onclick="history.back()" class="back-btn">
                <i class="fas fa-arrow-left"></i>
            </button>
            <h1 class="app-title">Alumni <span>Directory</span></h1>
        </header>

        <!-- Main Content -->
        <main class="main-content">
            <!-- Filter Section -->
            <section class="filter-section">
                <div class="filter-header">
                    <h2 class="filter-title">
                        <i class="fas fa-filter"></i>
                        Filter Alumni
                    </h2>
                    <div>
                        <button type="button" class="btn reset-btn btn-sm" id="resetBtn">
                            <i class="fas fa-undo"></i> Reset
                        </button>
                        <button type="button" class="btn btn-primary fetch-btn btn-sm" id="fetchBtn">
                            <i class="fas fa-search"></i> Fetch Alumni
                        </button>
                    </div>
                </div>
                <form id="filterForm" class="filter-form">
                    <div class="row g-2">
                        <div class="col-lg-3 col-md-6">
                            <label for="course" class="form-label">Course</label>
                            <select class="form-select form-select-sm" id="course">
                                <option value="">All Courses</option>
                                <option value="MCA">MCA</option>
                                <option value="BCA">BCA</option>
                                <option value="CSE">CSE</option>
                                <option value="ECE">ECE</option>
                                <option value="EEE">EEE</option>
                                <option value="MBA">MBA</option>
                                <option value="MTech">MTech</option>
                                <option value="Civil">Civil</option>
                                <option value="Mechanical">Mechanical</option>
                            </select>
                        </div>
                        <div class="col-lg-3 col-md-6">
                            <label for="gender" class="form-label">Gender</label>
                            <select class="form-select form-select-sm" id="gender">
                                <option value="">All</option>
                                <option value="Male">Male</option>
                                <option value="Female">Female</option>
                            </select>
                        </div>
                        <div class="col-lg-3 col-md-6">
                            <label for="gradYear" class="form-label">Graduation Year</label>
                            <select class="form-select form-select-sm" id="gradYear">
                                <option value="">All Years</option>
                                {{#each gradYears}}
                                    <option value="{{this}}">{{this}}</option>
                                {{/each}}
                            </select>
                        </div>
                        <div class="col-lg-3 col-md-6">
                            <label for="searchTerm" class="form-label">Search</label>
                            <input type="text" class="form-control form-control-sm" id="searchTerm" placeholder="Name or Student ID">
                        </div>
                    </div>
                </form>
            </section>

            <!-- Table Section -->
            <section class="table-section">
                <div class="table-card">
                    <div class="table-header">
                        <h3 class="table-title">Alumni List</h3>
                        <div class="d-flex align-items-center">
                            <span class="table-count me-3" id="alumniCount">0</span>
                            <button class="btn btn-sm btn-outline-primary" id="downloadBtn">
                                <i class="fas fa-download"></i> Export
                            </button>
                        </div>
                    </div>
                    <div class="table-container">
                        <table class="alumni-table">
                            <thead>
                                <tr>
                                    <th>S.No</th>
                                    <th>Name</th>
                                    <th>Student ID</th>
                                    <th>Course</th>
                                    <th>Gender</th>
                                    <th>Graduation Year</th>
                                    <th>Phone</th>
                                    <th>Email</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody id="alumniTableBody">
                                <!-- Initial empty state -->
                                <tr>
                                    <td colspan="9">
                                        <div class="empty-state">
                                            <i class="fas fa-filter empty-state-icon"></i>
                                            <h4 class="empty-state-title">No Alumni Data Loaded</h4>
                                            <p class="empty-state-text">Use the filters above and click the "Fetch Alumni" button to load alumni data.</p>
                                        </div>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </section>
        </main>
    </div>

    <!-- Student Details Modal -->
    <div class="modal fade" id="studentDetailsModal" tabindex="-1" aria-labelledby="studentDetailsModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="studentDetailsModalLabel">Alumni Details</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body" id="studentDetailsContent">
                    <!-- Modal content will be loaded here -->
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Download Modal -->
    <div class="modal fade" id="downloadModal" tabindex="-1" aria-labelledby="downloadModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="downloadModalLabel">Download Alumni Data</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="downloadForm">
                        <div class="mb-3">
                            <label for="downloadCourse" class="form-label">Course</label>
                            <select class="form-select" id="downloadCourse">
                                <option value="">All Courses</option>
                                <option value="MCA">MCA</option>
                                <option value="BCA">BCA</option>
                                <option value="CSE">CSE</option>
                                <option value="ECE">ECE</option>
                                <option value="EEE">EEE</option>
                                <option value="MBA">MBA</option>
                                <option value="MTech">MTech</option>
                                <option value="Civil">Civil</option>
                                <option value="Mechanical">Mechanical</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="downloadYear" class="form-label">Graduation Year</label>
                            <select class="form-select" id="downloadYear">
                                <option value="">All Years</option>
                                {{#each gradYears}}
                                    <option value="{{this}}">{{this}}</option>
                                {{/each}}
                            </select>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" id="confirmDownloadBtn">Download</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
    // DOM Elements
    const alumniTableBody = document.getElementById('alumniTableBody');
    const alumniCount = document.getElementById('alumniCount');
    const fetchBtn = document.getElementById('fetchBtn');
    const resetBtn = document.getElementById('resetBtn');
    const courseSelect = document.getElementById('course');
    const genderSelect = document.getElementById('gender');
    const gradYearSelect = document.getElementById('gradYear');
    const searchTermInput = document.getElementById('searchTerm');
    const studentDetailsModal = new bootstrap.Modal(document.getElementById('studentDetailsModal'));
    const studentDetailsContent = document.getElementById('studentDetailsContent');
    const downloadModal = new bootstrap.Modal(document.getElementById('downloadModal'));
    const downloadBtn = document.getElementById('downloadBtn');
    const confirmDownloadBtn = document.getElementById('confirmDownloadBtn');

    // Show skeleton loading
    function showSkeletonLoading() {
        let skeletonHTML = '';
        for (let i = 0; i < 10; i++) {
            skeletonHTML += `
                <tr class="skeleton-row">
                    <td><div class="skeleton skeleton-text sm"></div></td>
                    <td><div class="skeleton skeleton-text lg"></div></td>
                    <td><div class="skeleton skeleton-text md"></div></td>
                    <td><div class="skeleton skeleton-badge"></div></td>
                    <td><div class="skeleton skeleton-badge"></div></td>
                    <td><div class="skeleton skeleton-text sm"></div></td>
                    <td><div class="skeleton skeleton-text md"></div></td>
                    <td><div class="skeleton skeleton-text lg"></div></td>
                    <td><div class="skeleton skeleton-button"></div></td>
                </tr>
            `;
        }
        alumniTableBody.innerHTML = skeletonHTML;
    }

    // Show empty state
    function showEmptyState(message = 'No alumni found matching your criteria.') {
        alumniTableBody.innerHTML = `
            <tr>
                <td colspan="9">
                    <div class="empty-state">
                        <i class="fas fa-search empty-state-icon"></i>
                        <h4 class="empty-state-title">No Results Found</h4>
                        <p class="empty-state-text">${message}</p>
                    </div>
                </td>
            </tr>
        `;
        alumniCount.textContent = '0';
    }

    // Show initial state
    function showInitialState() {
        alumniTableBody.innerHTML = `
            <tr>
                <td colspan="9">
                    <div class="empty-state">
                        <i class="fas fa-filter empty-state-icon"></i>
                        <h4 class="empty-state-title">No Alumni Data Loaded</h4>
                        <p class="empty-state-text">Use the filters above and click the "Fetch Alumni" button to load alumni data.</p>
                    </div>
                </td>
            </tr>
        `;
        alumniCount.textContent = '0';
    }

    // Fetch alumni data based on filters
    async function fetchAlumniData() {
        // Show skeleton loading immediately when fetch is initiated
        showSkeletonLoading();
        
        // Get filter values
        const course = courseSelect.value;
        const gender = genderSelect.value;
        const year = gradYearSelect.value;
        const searchTerm = searchTermInput.value.trim();
        
        // Build query parameters
        const params = new URLSearchParams();
        if (course) params.set('course', course);
        if (gender) params.set('gender', gender);
        if (year) params.set('year', year);
        if (searchTerm) {
            // Check if search term is likely a student ID (alphanumeric)
            if (/^[a-zA-Z0-9]+$/.test(searchTerm) && searchTerm.length >= 5) {
                params.set('studentId', searchTerm);
            } else {
                params.set('name', searchTerm);
            }
        }
        
        try {
            // Simulate network delay for demonstration
            await new Promise(resolve => setTimeout(resolve, 1500));
            
            // Fetch data from the current endpoint with filters
            const response = await fetch(`${window.location.pathname}?${params.toString()}`);
            const text = await response.text();
            
            // Create a temporary element to parse the HTML response
            const tempDiv = document.createElement('div');
            tempDiv.innerHTML = text;
            
            // Extract the students data from the response
            // In a real implementation, this would parse the Handlebars-rendered HTML
            // For this example, we'll simulate the response by using the hidden data
            
            // Get all student data from the hidden container
            const studentData = [];
            const studentElements = document.querySelectorAll('[id^="modal-content-"]');
            
            studentElements.forEach(element => {
                const studentId = element.id.replace('modal-content-', '');
                
                // Extract basic info from the modal content
                const nameCell = element.querySelector('tr:nth-child(1) td');
                const idCell = element.querySelector('tr:nth-child(2) td');
                const genderCell = element.querySelector('tr:nth-child(5) td');
                const yearCell = element.querySelector('tr:nth-child(6) td');
                const phoneCell = element.querySelector('tr:nth-child(8) td');
                const emailCell = element.querySelector('tr:nth-child(7) td');
                const courseCell = element.querySelector('tr:nth-child(9) td');
                
                if (nameCell && idCell) {
                    // Apply filters (in a real implementation, this would be done server-side)
                    const studentCourse = courseCell ? courseCell.textContent : "MCA";
                    const studentGender = genderCell ? genderCell.textContent : '';
                    const studentYear = yearCell ? yearCell.textContent : '';
                    const studentName = nameCell.textContent;
                    const studentId = idCell.textContent;
                    
                    // Check if student matches filters
                    const matchesCourse = !course || studentCourse.includes(course);
                    const matchesGender = !gender || studentGender.includes(gender);
                    const matchesYear = !year || studentYear.includes(year);
                    const matchesSearch = !searchTerm || 
                        studentName.toLowerCase().includes(searchTerm.toLowerCase()) || 
                        studentId.toLowerCase().includes(searchTerm.toLowerCase());
                    
                    if (matchesCourse && matchesGender && matchesYear && matchesSearch) {
                        studentData.push({
                            id: studentId,
                            name: studentName,
                            course: studentCourse || "MCA", // Default to MCA if not specified
                            gender: studentGender || "Male", // Default to Male if not specified
                            year: studentYear || "2023", // Default to current year if not specified
                            phone: phoneCell ? phoneCell.textContent : '',
                            email: emailCell ? emailCell.textContent : ''
                        });
                    }
                }
            });
            
            // Update the table with filtered data
            if (studentData.length > 0) {
                let tableHTML = '';
                studentData.forEach((student, index) => {
                    tableHTML += `
                        <tr>
                            <td>${index + 1}</td>
                            <td class="name-cell">${student.name}</td>
                            <td>${student.id}</td>
                            <td><span class="course-badge">${student.course}</span></td>
                            <td>
                                <span class="gender-badge ${student.gender.toLowerCase()}">
                                    ${student.gender}
                                </span>
                            </td>
                            <td>${student.year}</td>
                            <td>${student.phone}</td>
                            <td>${student.email}</td>
                            <td>
                                <button class="view-btn" onclick="showStudentDetails('${student.id}')">
                                    <i class="fas fa-eye"></i> View
                                </button>
                            </td>
                        </tr>
                    `;
                });
                alumniTableBody.innerHTML = tableHTML;
                alumniCount.textContent = studentData.length;
            } else {
                showEmptyState();
            }
        } catch (error) {
            console.error('Error fetching data:', error);
            showEmptyState('An error occurred while fetching alumni data. Please try again.');
        }
    }

    // Show student details in modal with modern UI
    function showStudentDetails(studentId) {
        // Find the modal content for this student
        const modalContent = document.getElementById(`modal-content-${studentId}`);
        if (modalContent) {
            // Extract student data from the modal content
            const rows = modalContent.querySelectorAll('tr');
            const studentData = {};
            
            // Parse all data from the table rows
            rows.forEach(row => {
                const header = row.querySelector('th');
                const data = row.querySelector('td');
                if (header && data) {
                    const key = header.textContent.trim().toLowerCase().replace(/\s+/g, '_');
                    studentData[key] = data.textContent.trim();
                }
            });
            
            // Set a default profile image URL or use the one from data
            const profileImageUrl = studentData.image_url || 
                `https://ui-avatars.com/api/?name=${encodeURIComponent(studentData.name)}&background=6366f1&color=fff&size=128`;
            
            // Create a modern profile view with tabs
            const detailsHTML = `
                <div class="student-profile">
                    <img src="${profileImageUrl}" alt="${studentData.name}" class="profile-image">
                    <h3 class="profile-name">${studentData.name}</h3>
                    <p class="profile-id">${studentData.student_id}</p>
                    <div class="profile-badges">
                        <span class="profile-badge course">${studentData.course || 'MCA'}</span>
                        <span class="profile-badge year">${studentData.graduation_year}</span>
                        <span class="profile-badge gender ${studentData.gender?.toLowerCase()}">${studentData.gender}</span>
                    </div>
                </div>
                
                <div class="student-details-tabs">
                    <div class="student-details-tab active" data-tab="personal">Personal Info</div>
                    <div class="student-details-tab" data-tab="academic">Academic</div>
                    <div class="student-details-tab" data-tab="contact">Contact</div>
                </div>
                
                <div class="student-details-content">
                    <!-- Personal Information -->
                    <div class="details-section" data-section="personal">
                        <h4 class="details-section-title">Personal Information</h4>
                        <div class="details-grid">
                            <div class="details-item">
                                <div class="details-label">Full Name</div>
                                <div class="details-value">${studentData.name}</div>
                            </div>
                            <div class="details-item">
                                <div class="details-label">Date of Birth</div>
                                <div class="details-value">${studentData.date_of_birth}</div>
                            </div>
                            <div class="details-item">
                                <div class="details-label">Gender</div>
                                <div class="details-value">${studentData.gender}</div>
                            </div>
                            <div class="details-item">
                                <div class="details-label">Blood Group</div>
                                <div class="details-value">${studentData.blood_group}</div>
                            </div>
                            <div class="details-item">
                                <div class="details-label">Religion</div>
                                <div class="details-value">${studentData.religion}</div>
                            </div>
                            <div class="details-item">
                                <div class="details-label">Nationality</div>
                                <div class="details-value">${studentData.nationality}</div>
                            </div>
                            <div class="details-item">
                                <div class="details-label">Aadhaar Number</div>
                                <div class="details-value">${studentData.aadhaar_number}</div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Academic Information -->
                    <div class="details-section" data-section="academic" style="display: none;">
                        <h4 class="details-section-title">Academic Information</h4>
                        <div class="details-grid">
                            <div class="details-item">
                                <div class="details-label">Student ID</div>
                                <div class="details-value">${studentData.student_id}</div>
                            </div>
                            <div class="details-item">
                                <div class="details-label">Register Number</div>
                                <div class="details-value">${studentData.register_number}</div>
                            </div>
                            <div class="details-item">
                                <div class="details-label">Course</div>
                                <div class="details-value">${studentData.course || 'MCA'}</div>
                            </div>
                            <div class="details-item">
                                <div class="details-label">Graduation Year</div>
                                <div class="details-value">${studentData.graduation_year}</div>
                            </div>
                            <div class="details-item">
                                <div class="details-label">Previous Institution</div>
                                <div class="details-value">${studentData.previous_institution}</div>
                            </div>
                            <div class="details-item">
                                <div class="details-label">Previous Marks</div>
                                <div class="details-value">${studentData.previous_marks}</div>
                            </div>
                            <div class="details-item">
                                <div class="details-label">Scholarship</div>
                                <div class="details-value">${studentData.scholarship}</div>
                            </div>
                            <div class="details-item">
                                <div class="details-label">Admission Date</div>
                                <div class="details-value">${studentData.admission_date}</div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Contact Information -->
                    <div class="details-section" data-section="contact" style="display: none;">
                        <h4 class="details-section-title">Contact Information</h4>
                        <div class="details-grid">
                            <div class="details-item">
                                <div class="details-label">Email</div>
                                <div class="details-value">${studentData.email}</div>
                            </div>
                            <div class="details-item">
                                <div class="details-label">Phone</div>
                                <div class="details-value">${studentData.phone}</div>
                            </div>
                            <div class="details-item">
                                <div class="details-label">Address</div>
                                <div class="details-value address">${studentData.address}</div>
                            </div>
                            <div class="details-item">
                                <div class="details-label">Parent Name</div>
                                <div class="details-value">${studentData.parent_name}</div>
                            </div>
                            <div class="details-item">
                                <div class="details-label">Parent Phone</div>
                                <div class="details-value">${studentData.parent_phone}</div>
                            </div>
                            <div class="details-item">
                                <div class="details-label">Parental Income</div>
                                <div class="details-value">${studentData.parental_income}</div>
                            </div>
                            <div class="details-item">
                                <div class="details-label">Emergency Contact</div>
                                <div class="details-value">${studentData.emergency_contact}</div>
                            </div>
                            <div class="details-item">
                                <div class="details-label">Emergency Relationship</div>
                                <div class="details-value">${studentData.emergency_contact_relationship}</div>
                            </div>
                            <div class="details-item">
                                <div class="details-label">Emergency Phone</div>
                                <div class="details-value">${studentData.emergency_phone}</div>
                            </div>
                        </div>
                    </div>
                </div>
            `;
            
            studentDetailsContent.innerHTML = detailsHTML;
            
            // Add tab functionality
            const tabs = studentDetailsContent.querySelectorAll('.student-details-tab');
            tabs.forEach(tab => {
                tab.addEventListener('click', function() {
                    // Remove active class from all tabs
                    tabs.forEach(t => t.classList.remove('active'));
                    // Add active class to clicked tab
                    this.classList.add('active');
                    
                    // Hide all sections
                    const sections = studentDetailsContent.querySelectorAll('.details-section');
                    sections.forEach(section => {
                        section.style.display = 'none';
                    });
                    
                    // Show the selected section
                    const sectionToShow = studentDetailsContent.querySelector(`.details-section[data-section="${this.dataset.tab}"]`);
                    if (sectionToShow) {
                        sectionToShow.style.display = 'block';
                    }
                });
            });
            
            studentDetailsModal.show();
        }
    }

    // Handle download
    function handleDownload() {
        const course = document.getElementById('downloadCourse').value;
        const year = document.getElementById('downloadYear').value;
        
        const params = new URLSearchParams();
        if (course) params.set('course', course);
        if (year) params.set('year', year);
        params.set('download', 'true');
        
        window.location.href = `${window.location.pathname}?${params.toString()}`;
        downloadModal.hide();
    }

    // Reset filters
    function resetFilters() {
        courseSelect.value = '';
        genderSelect.value = '';
        gradYearSelect.value = '';
        searchTermInput.value = '';
        showInitialState();
    }

    // Event Listeners
    fetchBtn.addEventListener('click', fetchAlumniData);
    resetBtn.addEventListener('click', resetFilters);
    downloadBtn.addEventListener('click', () => downloadModal.show());
    confirmDownloadBtn.addEventListener('click', handleDownload);

    // Initialize loading state handling
    document.addEventListener('DOMContentLoaded', () => {
        // Remove the event listener that was causing the issue
        // The previous code was adding a duplicate event listener here
        
        // Instead, we'll just make sure the fetch button works correctly
        fetchBtn.addEventListener('click', fetchAlumniData);
    });

    // Hidden container for student details data
    document.write(`
        <div style="display: none;">
            {{#each students}}
            <div id="modal-content-{{studentId}}">
                <table>
                    <tr>
                        <th>Name</th>
                        <td>{{name}}</td>
                    </tr>
                    <tr>
                        <th>Student ID</th>
                        <td>{{studentId}}</td>
                    </tr>
                    <tr>
                        <th>Register Number</th>
                        <td>{{registerNumber}}</td>
                    </tr>
                    <tr>
                        <th>Date of Birth</th>
                        <td>{{dob}}</td>
                    </tr>
                    <tr>
                        <th>Gender</th>
                        <td>{{gender}}</td>
                    </tr>
                    <tr>
                        <th>Graduation Year</th>
                        <td>{{graduationYear}}</td>
                    </tr>
                    <tr>
                        <th>Email</th>
                        <td>{{email}}</td>
                    </tr>
                    <tr>
                        <th>Phone</th>
                        <td>{{phone}}</td>
                    </tr>
                    <tr>
                        <th>Course</th>
                        <td>{{course}}</td>
                    </tr>
                    <tr>
                        <th>Aadhaar Number</th>
                        <td>{{aadhaarNum}}</td>
                    </tr>
                    <tr>
                        <th>Address</th>
                        <td>{{address.address}}, {{address.city}}, {{address.state}} - {{address.pinCode}}, {{address.country}}</td>
                    </tr>
                    <tr>
                        <th>Parent Name</th>
                        <td>{{parentName}}</td>
                    </tr>
                    <tr>
                        <th>Parent Phone</th>
                        <td>{{parentPhone}}</td>
                    </tr>
                    <tr>
                        <th>Parental Income</th>
                        <td>{{parentalIncome}}</td>
                    </tr>
                    <tr>
                        <th>Previous Institution</th>
                        <td>{{previousInstitution}}</td>
                    </tr>
                    <tr>
                        <th>Previous Marks (Percentage)</th>
                        <td>{{previousMarks}}%</td>
                    </tr>
                    <tr>
                        <th>Emergency Contact Name</th>
                        <td>{{emergencyContact}}</td>
                    </tr>
                    <tr>
                        <th>Emergency Contact Relationship:</th>
                        <td>{{emergencyContactRelationship}}</td>
                    </tr>
                    <tr>
                        <th>Emergency Contact Phone</th>
                        <td>{{emergencyPhone}}</td>
                    </tr>
                    <tr>
                        <th>Religion</th>
                        <td>{{religion}}</td>
                    </tr>
                    <tr>
                        <th>Blood Group</th>
                        <td>{{bloodGroup}}</td>
                    </tr>
                    <tr>
                        <th>Nationality</th>
                        <td>{{nationality}}</td>
                    </tr>
                    <tr>
                        <th>Scholarship</th>
                        <td>{{scholarship}}</td>
                    </tr>
                    <tr>
                        <th>Transportation</th>
                        <td>{{transportation}}</td>
                    </tr>
                    <tr>
                        <th>Hostel Required</th>
                        <td>{{hostelRequired}}</td>
                    </tr>
                    <tr>
                        <th>Admission Date</th>
                        <td>{{admissionDate}}</td>
                    </tr>
                    <tr>
                        <th>Image URL</th>
                        <td>{{imageUrl}}</td>
                    </tr>
                </table>
            </div>
            {{/each}}
        </div>
    `);
</script>
</body>
</html>