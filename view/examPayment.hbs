<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Payment</title>
  <script src="https://js.stripe.com/v3/"></script>
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #f4f4f9;
      margin: 0;
      padding: 0;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
    }

    .container {
      background: #fff;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
      max-width: 400px;
      width: 100%;
      text-align: center;
    }

    h1 {
      font-size: 24px;
      margin-bottom: 20px;
      text-align: center;
    }

    .student-info {
      margin-bottom: 20px;
      {{!-- text-align: left; --}}
      font-size: 16px;
      color: #333;
    }

    .student-info p {
      margin: 5px 0;
    }

    form {
      display: flex;
      flex-direction: column;
    }

    label {
      font-size: 14px;
      margin-bottom: 5px;
      color: #333;
      text-align: left;
    }

    input {
      width: 100%;
      padding: 10px;
      margin-bottom: 15px;
      border: 1px solid #ddd;
      border-radius: 4px;
      box-sizing: border-box;
    }

    #card-element {
      padding: 10px;
      border: 1px solid #ddd;
      border-radius: 4px;
      margin-bottom: 15px;
    }

    button {
      width: 100%;
      padding: 10px;
      background: #007bff;
      margin-top: 10px;
      color: #fff;
      border: none;
      border-radius: 4px;
      font-size: 16px;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }

    button:hover {
      background: #0056b3;
    }

    input[type="number"]::-webkit-inner-spin-button,
    input[type="number"]::-webkit-outer-spin-button {
      -webkit-appearance: none;
      margin: 0;
    }

    input[type="number"] {
      -moz-appearance: textfield;
    }
  </style>
</head>
<body>
  <div class="container">
    <h1 style="color: #0056b3;">Exam Fees Payment</h1>
    
    <div class="student-info">
      <p>{{studentData.name}}</p>
      <p>{{studentData.email}}</p>
      <p>{{studentData.phone}}</p>
    </div>

    <form action="/v1/api/createPaymentStripe" method="POST" id="payment-form">
      <label for="pendingFee">Pending Exam Fees (INR):</label>
      <input type="number" name="pendingFee" id="pendingFee" value="{{studentData.examPendingFee}}" readonly required />

      <input type="hidden" name="paymentType" value="Exam">
      <input type="hidden" name="studentId" value="{{studentData.studentId}}">
      <input type="hidden" name="email" value="{{studentData.email}}">
      <input type="hidden" name="name" value="{{studentData.name}}">
      <input type="hidden" name="phone" value="{{studentData.phone}}">
      <input type="hidden" name="year" value="{{studentData.year}}">

      <label for="amount">Enter Amount (INR):</label>
      <input type="number" name="amount" id="amount" value="{{studentData.examPendingFee}}" placeholder="Enter amount" required oninput="validateAmount()" style="-moz-appearance: textfield; -webkit-appearance: none; margin: 0;" />

      <label style="margin-top: 10px;" for="card-element">Card Details:</label>
      <div id="card-element"></div>

      <button type="submit">Pay with Stripepay</button>
      <input type="hidden" name="stripeToken" id="stripeToken">
    </form>
      <button onclick="window.location.href='/v1/api/studentProfile';">Cancel</button>
  </div>

  <script>
    const stripe = Stripe('{{key}}');
    const elements = stripe.elements();

    const card = elements.create('card');
    card.mount('#card-element');

    const form = document.getElementById('payment-form');
    form.addEventListener('submit', async (event) => {
      event.preventDefault();

      const { token, error } = await stripe.createToken(card);
      if (error) {
        alert(error.message);
      } else {
        document.getElementById('stripeToken').value = token.id;
        form.submit();
      }
    });

    function validateAmount() {
      const pendingFee = parseFloat(document.getElementById('pendingFee').value);
      const amountInput = document.getElementById('amount');
      const enteredAmount = parseFloat(amountInput.value);

      if (enteredAmount > pendingFee) {
        amountInput.value = amountInput.value.slice(0, -1);
      } else if (enteredAmount <= 0 || isNaN(enteredAmount)) {
        amountInput.value = ''; 
      }
    };
  </script>
</body>
</html>
