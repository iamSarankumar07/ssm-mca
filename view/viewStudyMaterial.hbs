<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Study Materials Admin - {{course}} {{year}}</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary: #0f172a;
            --primary-light: #f1f5f9;
            --primary-dark: #0f172a;
            --secondary: #64748b;
            --accent: #4f46e5;
            --accent-light: #ede9fe;
            --accent-dark: #4338ca;
            --success: #10b981;
            --danger: #ef4444;
            --warning: #f59e0b;
            --gray-50: #f8fafc;
            --gray-100: #f1f5f9;
            --gray-200: #e2e8f0;
            --gray-300: #cbd5e1;
            --gray-400: #94a3b8;
            --gray-500: #64748b;
            --gray-600: #475569;
            --gray-700: #334155;
            --gray-800: #1e293b;
            --gray-900: #0f172a;
            --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
            --shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
            --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
            --transition: all 0.2s ease;
            --border-radius: 0.5rem;
        }
        
        body {
            background-color: var(--gray-100);
            font-family: 'Inter', sans-serif;
            color: var(--gray-800);
            min-height: 100vh;
        }

        .header {
            background-color: white;
            border-bottom: 1px solid var(--gray-200);
            padding: 1.25rem 0;
            position: sticky;
            top: 0;
            z-index: 100;
            box-shadow: var(--shadow-sm);
        }

        .header-title {
            font-weight: 700;
            font-size: 1.25rem;
            margin: 0;
            color: var(--accent);
            
        }

        .header-subtitle {
            color: var(--gray-500);
            font-size: 0.875rem;
            margin: 0;
        }

        .back-button {
            display: inline-flex;
            align-items: center;
            color: var(--gray-600);
            text-decoration: none;
            font-weight: 500;
            font-size: 0.875rem;
            padding: 0.5rem 0.75rem;
            border-radius: var(--border-radius);
            background-color: var(--gray-100);
            transition: var(--transition);
            margin-right: 1rem;
        }

        .back-button:hover {
            color: var(--accent);
            background-color: var(--accent-light);
        }

        .search-container {
            position: relative;
            max-width: 400px;
            width: 100%;
        }

        .search-input {
            padding: 0.75rem 1rem 0.75rem 2.75rem;
            border-radius: var(--border-radius);
            border: 1px solid var(--gray-300);
            width: 100%;
            font-size: 0.875rem;
            transition: var(--transition);
            background-color: white;
        }

        .search-input:focus {
            outline: none;
            border-color: var(--accent);
            box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.15);
        }

        .search-icon {
            position: absolute;
            left: 1rem;
            top: 50%;
            transform: translateY(-50%);
            color: var(--gray-400);
            font-size: 1rem;
        }

        .main-content {
            padding: 2rem 0;
        }

        .table-container {
            background-color: white;
            border-radius: var(--border-radius);
            box-shadow: var(--shadow-md);
            overflow: hidden;
        }

        .admin-table {
            width: 100%;
            border-collapse: separate;
            border-spacing: 0;
        }

        .admin-table th {
            background-color: var(--gray-50);
            color: var(--gray-600);
            font-weight: 600;
            font-size: 0.75rem;
            text-transform: uppercase;
            letter-spacing: 0.05em;
            padding: 1rem 1.25rem;
            border-bottom: 1px solid var(--gray-200);
            text-align: left;
            white-space: nowrap;
        }

        .admin-table th.actions-header {
            text-align: center;
        }

        .admin-table td {
            padding: 1.25rem;
            border-bottom: 1px solid var(--gray-200);
            color: var(--gray-700);
            font-size: 0.875rem;
            vertical-align: middle;
            text-align: center;
        }

        .admin-table tr:last-child td {
            border-bottom: none;
        }

        .admin-table tr:hover td {
            background-color: var(--gray-50);
        }

        .subject-code {
            display: inline-block;
            padding: 0.25rem 0.5rem;
            background-color: var(--accent-light);
            color: var(--accent);
            border-radius: 0.375rem;
            font-weight: 600;
            font-size: 0.75rem;
        }

        .subject-title {
            font-weight: 500;
            color: var(--gray-900);
        }

        .table-actions {
            display: flex;
            gap: 0.5rem;
            justify-content: center;
        }

        .btn-icon {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            width: 2.25rem;
            height: 2.25rem;
            border-radius: 0.5rem;
            border: none;
            transition: var(--transition);
            background-color: transparent;
            color: var(--gray-500);
        }

        .btn-icon:hover {
            background-color: var(--gray-100);
            color: var(--gray-800);
        }

        .btn-view:hover {
            background-color: var(--accent-light);
            color: var(--accent);
        }

        .btn-edit:hover {
            background-color: rgba(245, 158, 11, 0.1);
            color: var(--warning);
        }

        .btn-delete:hover {
            background-color: rgba(239, 68, 68, 0.1);
            color: var(--danger);
        }

        .btn-download {
            color: var(--accent);
            background-color: var(--accent-light);
            transition: var(--transition);
        }

        .btn-download:hover {
            background-color: var(--accent-light);
            color: var(--accent-dark);
            transform: translateY(-2px);
        }

        .table-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1.25rem 1.5rem;
            border-bottom: 1px solid var(--gray-200);
        }

        .table-title {
            font-weight: 600;
            font-size: 1.125rem;
            color: var(--gray-900);
            margin: 0;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .table-title i {
            color: var(--accent);
        }

        .semester-filter {
            display: flex;
            gap: 0.75rem;
            align-items: center;
        }

        .semester-filter label {
            font-size: 0.875rem;
            color: var(--gray-600);
            margin: 0;
            font-weight: 500;
        }

        .semester-select {
            padding: 0.5rem 2rem 0.5rem 0.75rem;
            border-radius: 0.375rem;
            border: 1px solid var(--gray-300);
            font-size: 0.875rem;
            color: var(--gray-800);
            background-color: white;
            appearance: none;
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24' stroke='%2364748b'%3E%3Cpath stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M19 9l-7 7-7-7'%3E%3C/path%3E%3C/svg%3E");
            background-repeat: no-repeat;
            background-position: right 0.5rem center;
            background-size: 1rem;
        }

        .semester-select:focus {
            outline: none;
            border-color: var(--accent);
            box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.15);
        }

        .pagination-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1.25rem 1.5rem;
            border-top: 1px solid var(--gray-200);
        }

        .pagination-info {
            font-size: 0.875rem;
            color: var(--gray-500);
        }

        .pagination {
            display: flex;
            gap: 0.375rem;
        }

        .page-btn {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            min-width: 2.25rem;
            height: 2.25rem;
            padding: 0 0.5rem;
            border-radius: 0.5rem;
            border: 1px solid var(--gray-300);
            background-color: white;
            color: var(--gray-700);
            font-size: 0.875rem;
            transition: var(--transition);
        }

        .page-btn:hover {
            background-color: var(--gray-100);
            border-color: var(--gray-400);
        }

        .page-btn.active {
            background-color: var(--accent);
            border-color: var(--accent);
            color: white;
            font-weight: 500;
        }

        .page-btn.disabled {
            opacity: 0.5;
            pointer-events: none;
        }

        .empty-state {
            text-align: center;
            padding: 4rem 1rem;
        }

        .empty-state i {
            font-size: 3rem;
            color: var(--gray-300);
            margin-bottom: 1.5rem;
        }

        .empty-state h3 {
            font-weight: 600;
            margin-bottom: 0.75rem;
            color: var(--gray-800);
        }

        .empty-state p {
            color: var(--gray-500);
            margin-bottom: 1.5rem;
            max-width: 400px;
            margin-left: auto;
            margin-right: auto;
        }

        .empty-state .btn-add {
            background-color: var(--accent);
            color: white;
            font-weight: 500;
            padding: 0.625rem 1.25rem;
            border-radius: 0.5rem;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            transition: var(--transition);
        }

        .empty-state .btn-add:hover {
            background-color: var(--accent-dark);
            transform: translateY(-2px);
        }

        .modal-content {
            border-radius: var(--border-radius);
            border: none;
            box-shadow: var(--shadow-lg);
        }

        .modal-header {
            border-bottom: 1px solid var(--gray-200);
            padding: 1rem 1.5rem;
            background-color: var(--gray-50);
        }

        .modal-title {
            font-weight: 600;
            color: var(--gray-900);
            display: flex;
            align-items: center;
            gap: 0.5rem;
            font-size: 1.1rem;
        }

        .modal-title i {
            color: var(--accent);
        }

        .modal-title i.warning-icon {
            color: var(--danger);
        }

        .modal-body {
            padding: 1.25rem 1.5rem;
            max-height: 65vh;
            overflow-y: auto;
        }

        .modal-footer {
            border-top: 1px solid var(--gray-200);
            padding: 1rem 1.5rem;
            background-color: var(--gray-50);
        }

        .btn-modal {
            padding: 0.5rem 1.25rem;
            border-radius: 0.5rem;
            font-weight: 500;
            font-size: 0.875rem;
            transition: var(--transition);
        }

        .btn-cancel {
            background-color: white;
            color: var(--gray-700);
            border: 1px solid var(--gray-300);
        }

        .btn-cancel:hover {
            background-color: var(--gray-100);
            border-color: var(--gray-400);
        }

        .btn-confirm-delete {
            background-color: var(--danger);
            color: white;
            border: none;
        }

        .btn-confirm-delete:hover {
            background-color: #dc2626;
        }

        .btn-save {
            background-color: var(--accent);
            color: white;
            border: none;
        }

        .btn-save:hover {
            background-color: var(--accent-dark);
        }

        .toast-container {
            position: fixed;
            bottom: 1.5rem;
            right: 1.5rem;
            z-index: 1050;
        }

        .toast {
            background-color: white;
            border-radius: var(--border-radius);
            box-shadow: var(--shadow-lg);
            border-left: 4px solid var(--accent);
            overflow: hidden;
            margin-bottom: 0.75rem;
            min-width: 320px;
            opacity: 1;
        }

        .toast.success {
            border-left-color: var(--success);
        }

        .toast.error {
            border-left-color: var(--danger);
        }

        .toast-header {
            background-color: white;
            border-bottom: 1px solid var(--gray-200);
            padding: 0.875rem 1.25rem;
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

        .toast-header strong {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            font-weight: 600;
        }

        .toast-body {
            padding: 0.875rem 1.25rem;
            color: var(--gray-700);
        }

        .file-size {
            display: inline-flex;
            align-items: center;
            gap: 0.375rem;
            padding: 0.25rem 0.5rem;
            background-color: var(--gray-100);
            border-radius: 0.375rem;
            color: var(--gray-600);
            font-size: 0.75rem;
            font-weight: 500;
        }

        .date-badge {
            display: inline-flex;
            align-items: center;
            gap: 0.375rem;
            color: var(--gray-600);
            font-size: 0.875rem;
        }

        .btn-add-material {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            background-color: var(--accent);
            color: white;
            font-weight: 500;
            padding: 0.625rem 1.25rem;
            border-radius: 0.5rem;
            text-decoration: none;
            transition: var(--transition);
            border: none;
        }

        .btn-add-material:hover {
            background-color: var(--accent-dark);
            transform: translateY(-2px);
        }

        .form-group {
            margin-bottom: 1rem;
        }

        .form-label {
            display: block;
            margin-bottom: 0.375rem;
            font-weight: 500;
            color: var(--gray-700);
            font-size: 0.875rem;
        }

        .form-control {
            width: 100%;
            padding: 0.625rem 0.875rem;
            border-radius: var(--border-radius);
            border: 1px solid var(--gray-300);
            font-size: 0.875rem;
            transition: var(--transition);
            background-color: white;
        }

        .form-control:focus {
            outline: none;
            border-color: var(--accent);
            box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.15);
        }

        .form-text {
            display: block;
            margin-top: 0.25rem;
            font-size: 0.75rem;
            color: var(--gray-500);
        }

        .form-error {
            color: var(--danger);
            font-size: 0.75rem;
            margin-top: 0.375rem;
        }

        @media (max-width: 992px) {
            .table-responsive {
                overflow-x: auto;
            }
            
            .admin-table {
                min-width: 800px;
            }
        }

        @media (max-width: 768px) {
            .header-container {
                flex-direction: column;
                align-items: flex-start;
                gap: 1rem;
            }

            .search-container {
                max-width: 100%;
                width: 100%;
            }
            
            .table-header {
                flex-direction: column;
                align-items: flex-start;
                gap: 1rem;
            }
            
            .pagination-container {
                flex-direction: column;
                gap: 1rem;
                align-items: flex-start;
            }
        }

        .file-upload-container {
            margin-bottom: 1rem;
        }

        .file-upload-area {
            position: relative;
            width: 100%;
            min-height: 100px;
            border: 2px dashed var(--gray-300);
            border-radius: var(--border-radius);
            background-color: var(--gray-50);
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            padding: 1.25rem;
            transition: var(--transition);
            cursor: pointer;
            overflow: hidden;
        }

        .file-upload-area:hover {
            border-color: var(--accent);
            background-color: var(--accent-light);
        }

        .file-upload-area.drag-over {
            border-color: var(--accent);
            background-color: var(--accent-light);
        }

        .file-upload-icon {
            font-size: 1.75rem;
            color: var(--gray-400);
            margin-bottom: 0.5rem;
            transition: var(--transition);
        }

        .file-upload-area:hover .file-upload-icon {
            color: var(--accent);
        }

        .file-upload-text {
            font-size: 0.875rem;
            color: var(--gray-600);
            text-align: center;
            margin-bottom: 0.375rem;
        }

        .file-upload-subtext {
            font-size: 0.75rem;
            color: var(--gray-500);
            text-align: center;
        }

        .file-upload-input {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            opacity: 0;
            cursor: pointer;
        }

        .file-preview {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            padding: 0.625rem 0.875rem;
            background-color: white;
            border: 1px solid var(--gray-200);
            border-radius: var(--border-radius);
            margin-top: 0.75rem;
        }

        .file-preview-icon {
            font-size: 1.25rem;
            color: var(--accent);
        }

        .file-preview-info {
            flex: 1;
        }

        .file-preview-name {
            font-weight: 500;
            font-size: 0.875rem;
            color: var(--gray-800);
            margin-bottom: 0.125rem;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            max-width: 200px;
        }

        .file-preview-size {
            font-size: 0.75rem;
            color: var(--gray-500);
        }

        .file-preview-remove {
            color: var(--gray-500);
            background: none;
            border: none;
            cursor: pointer;
            transition: var(--transition);
            padding: 0.25rem;
        }

        .file-preview-remove:hover {
            color: var(--danger);
        }

        .edit-modal-dialog {
            max-width: 500px;
        }

        .edit-form-row {
            display: flex;
            gap: 1rem;
            margin-bottom: 0.5rem;
        }

        .edit-form-col {
            flex: 1;
        }

        .form-grid {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 1rem;
        }

        .form-grid-full {
            grid-column: span 2;
        }
    </style>
</head>
<body>

<header class="header">
    <div class="container d-flex justify-content-between align-items-center header-container">
        <div class="d-flex align-items-center">
            <a href="/v1/api/dashboard" class="back-button">
                <i class="bi bi-arrow-left me-1"></i> Back
            </a>
            <div>
                <h1 class="header-title">{{course}} - {{year}} Study Materials</h1>
            </div>
        </div>
        <div class="search-container">
            <i class="bi bi-search search-icon"></i>
            <input type="text" class="search-input" id="searchInput" placeholder="Search by subject code or title...">
        </div>
    </div>
</header>

<main class="main-content">
    <div class="container">
        <div class="table-container">
            <div class="table-header">
                <h2 class="table-title"><i class="bi bi-journal-text"></i> Study Materials</h2>
                <div class="d-flex align-items-center gap-3">
                    <div class="semester-filter">
                        <label for="semesterFilter">Semester:</label>
                        <select id="semesterFilter" class="semester-select">
                            <option value="all">All Semesters</option>
                            {{#each semesters}}
                                <option value="{{this}}">Semester {{this}}</option>
                            {{/each}}
                        </select>
                    </div>
                    <a href="/v1/api/getStudyMaterialUpload?course={{course}}&year={{year}}" class="btn-add-material">
                        <i class="bi bi-plus-lg"></i> Add Material
                    </a>
                </div>
            </div>
            
            {{#unless materials}}
            <div class="empty-state" id="emptyState">
                <i class="bi bi-journal-x"></i>
                <h3>No study materials found</h3>
                <p>There are no study materials available for this course yet. Add your first study material to get started.</p>
            </div>
            {{else}}
            <div class="table-responsive">
                <table class="admin-table">
                    <thead>
                        <tr>
                            <th class="actions-header">Subject Code</th>
                            <th class="actions-header">Subject Title</th>
                            <th class="actions-header">Semester</th>
                            <th class="actions-header">Upload Date</th>
                            <th class="actions-header">File Size</th>
                            <th class="actions-header">Download</th>
                            <th class="actions-header">Actions</th>
                        </tr>
                    </thead>
                    <tbody id="materialsTableBody">
                        {{#each materials}}
                        <tr class="material-row" data-id="{{id}}" data-semester="{{semester}}" data-code="{{subjectCode}}" data-title="{{subjectTitle}}">
                            <td><span class="subject-code">{{subjectCode}}</span></td>
                            <td class="subject-title">{{subjectTitle}}</td>
                            <td>Semester {{semester}}</td>
                            <td>
                                <span class="date-badge">
                                    <i class="bi bi-calendar3"></i> {{uploadDate}}
                                </span>
                            </td>
                            <td>
                                <span class="file-size">
                                    <i class="bi bi-file-earmark"></i> {{fileSize}}
                                </span>
                            </td>
                            <td class="actions-header">
                                <a href="{{fileUrl}}" class="btn-icon btn-download" title="Download" target="_blank">
                                    <i class="bi bi-download"></i>
                                </a>
                            </td>
                            <td>
                                <div class="table-actions">
                                    <button class="btn-icon btn-edit edit-btn" data-id="{{id}}" title="Edit">
                                        <i class="bi bi-pencil"></i>
                                    </button>
                                    <button class="btn-icon btn-delete delete-btn" data-id="{{id}}" data-bs-toggle="modal" data-bs-target="#deleteModal" title="Delete">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                        {{/each}}
                    </tbody>
                </table>
            </div>

            <div class="pagination-container">
                <div class="pagination-info">
                    Showing <span id="startRange">1</span> to <span id="endRange">{{materials.length}}</span> of <span id="totalItems">{{materials.length}}</span> materials
                </div>
                <div class="pagination">
                    <button class="page-btn disabled" id="prevPage">
                        <i class="bi bi-chevron-left"></i>
                    </button>
                    <button class="page-btn active">1</button>
                    <button class="page-btn disabled" id="nextPage">
                        <i class="bi bi-chevron-right"></i>
                    </button>
                </div>
            </div>
            {{/unless}}
        </div>
    </div>
</main>

<div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered edit-modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editModalLabel"><i class="bi bi-pencil-square"></i> Edit Study Material</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editMaterialForm" enctype="multipart/form-data">
                    <input type="hidden" id="editMaterialId">
                    <input type="hidden" id="editCourse">
                    <input type="hidden" id="editYear">
                    
                    <div class="form-grid">
                        <div class="form-group">
                            <label for="editSubjectCode" class="form-label">Subject Code</label>
                            <input type="text" class="form-control" id="editSubjectCode" required>
                        </div>
                        <div class="form-group">
                            <label for="editSubjectTitle" class="form-label">Subject Title</label>
                            <input type="text" class="form-control" id="editSubjectTitle" required>
                        </div>
                        <div class="form-group">
                            <label for="editSemester" class="form-label">Semester</label>
                            <select class="form-control" id="editSemester" required>
                                {{#each semesters}}
                                    <option value="{{this}}">Semester {{this}}</option>
                                {{/each}}
                            </select>
                        </div>
                    </div>
                    
                    <div class="form-group form-grid-full">
                        <label class="form-label">Replace PDF File (Optional)</label>
                        <div class="file-upload-container">
                            <div class="file-upload-area" id="pdfDropArea">
                                <i class="bi bi-file-earmark-pdf file-upload-icon"></i>
                                <p class="file-upload-text">Drag & drop a PDF file here or click to browse</p>
                                <p class="file-upload-subtext">Only PDF files are supported (Max: 10MB)</p>
                                <input type="file" class="file-upload-input" id="editPdfFile" accept=".pdf" />
                            </div>
                            <div class="file-preview" id="pdfPreview" style="display: none;">
                                <i class="bi bi-file-earmark-pdf file-preview-icon"></i>
                                <div class="file-preview-info">
                                    <div class="file-preview-name" id="pdfFileName">document.pdf</div>
                                    <div class="file-preview-size" id="pdfFileSize">0 KB</div>
                                </div>
                                <button type="button" class="file-preview-remove" id="removePdfBtn">
                                    <i class="bi bi-x-lg"></i>
                                </button>
                            </div>
                        </div>
                        <small class="form-text">Leave empty if you don't want to change the current PDF file.</small>
                    </div>
                    
                    <div id="editFormErrors" class="form-error"></div>
                </form>
                <div id="editLoadingIndicator" class="text-center py-3" style="display: none;">
                    <div class="spinner-border text-accent" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <p class="mt-2 text-gray-600">Loading material data...</p>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-modal btn-cancel" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-modal btn-save" id="saveEditBtn">
                    <i class="bi bi-check-lg me-1"></i> Save Changes
                </button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel"><i class="bi bi-exclamation-triangle warning-icon"></i> Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this study material? This action cannot be undone.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-modal btn-cancel" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-modal btn-confirm-delete" id="confirmDelete">
                    <i class="bi bi-trash me-1"></i> Delete
                </button>
            </div>
        </div>
    </div>
</div>

<div class="toast-container">
    <div class="toast success" id="successToast" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <strong class="me-auto"><i class="bi bi-check-circle"></i> Success</strong>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body" id="successToastMessage">
            Operation completed successfully.
        </div>
    </div>
    <div class="toast error" id="errorToast" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <strong class="me-auto"><i class="bi bi-exclamation-circle"></i> Error</strong>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body" id="errorToastMessage">
            An error occurred. Please try again.
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const editModal = new bootstrap.Modal(document.getElementById('editModal'));
        const deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));
        
        const toastElList = [].slice.call(document.querySelectorAll('.toast'));
        const toasts = toastElList.map(function(toastEl) {
            return new bootstrap.Toast(toastEl, {
                autohide: true,
                delay: 5000
            });
        });
        
        function showSuccessToast(message) {
            document.getElementById('successToastMessage').textContent = message;
            const successToast = bootstrap.Toast.getInstance(document.getElementById('successToast'));
            successToast.show();
        }
        
        function showErrorToast(message) {
            document.getElementById('errorToastMessage').textContent = message;
            const errorToast = bootstrap.Toast.getInstance(document.getElementById('errorToast'));
            errorToast.show();
        }
        
        const searchInput = document.getElementById('searchInput');
        const materialRows = document.querySelectorAll('.material-row');
        const emptyState = document.getElementById('emptyState');
        const tableContainer = document.querySelector('.table-responsive');
        const paginationContainer = document.querySelector('.pagination-container');
        
        searchInput.addEventListener('input', function() {
            const searchTerm = this.value.toLowerCase().trim();
            let visibleCount = 0;
            
            materialRows.forEach(row => {
                const code = row.getAttribute('data-code').toLowerCase();
                const title = row.getAttribute('data-title').toLowerCase();
                
                if (code.includes(searchTerm) || title.includes(searchTerm)) {
                    row.style.display = '';
                    visibleCount++;
                } else {
                    row.style.display = 'none';
                }
            });
            
            if (document.getElementById('startRange')) {
                document.getElementById('startRange').textContent = visibleCount > 0 ? '1' : '0';
                document.getElementById('endRange').textContent = visibleCount;
                document.getElementById('totalItems').textContent = visibleCount;
            }
            
            if (emptyState && tableContainer && paginationContainer) {
                if (visibleCount === 0) {
                    emptyState.style.display = 'block';
                    tableContainer.style.display = 'none';
                    paginationContainer.style.display = 'none';
                } else {
                    emptyState.style.display = 'none';
                    tableContainer.style.display = 'block';
                    paginationContainer.style.display = 'flex';
                }
            }
        });
        
        const semesterFilter = document.getElementById('semesterFilter');
        
        if (semesterFilter) {
            semesterFilter.addEventListener('change', function() {
                const selectedSemester = this.value;
                let visibleCount = 0;
                
                materialRows.forEach(row => {
                    const semester = row.getAttribute('data-semester');
                    
                    if (selectedSemester === 'all' || semester === selectedSemester) {
                        row.style.display = '';
                        visibleCount++;
                    } else {
                        row.style.display = 'none';
                    }
                });
                
                if (document.getElementById('startRange')) {
                    document.getElementById('startRange').textContent = visibleCount > 0 ? '1' : '0';
                    document.getElementById('endRange').textContent = visibleCount;
                    document.getElementById('totalItems').textContent = visibleCount;
                }
                
                if (emptyState && tableContainer && paginationContainer) {
                    if (visibleCount === 0) {
                        emptyState.style.display = 'block';
                        tableContainer.style.display = 'none';
                        paginationContainer.style.display = 'none';
                    } else {
                        emptyState.style.display = 'none';
                        tableContainer.style.display = 'block';
                        paginationContainer.style.display = 'flex';
                    }
                }
            });
        }
        
        const pdfDropArea = document.getElementById('pdfDropArea');
        const pdfFileInput = document.getElementById('editPdfFile');
        const pdfPreview = document.getElementById('pdfPreview');
        const pdfFileName = document.getElementById('pdfFileName');
        const pdfFileSize = document.getElementById('pdfFileSize');
        const removePdfBtn = document.getElementById('removePdfBtn');
        
        if (pdfDropArea && pdfFileInput) {
            ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
                pdfDropArea.addEventListener(eventName, preventDefaults, false);
            });
            
            function preventDefaults(e) {
                e.preventDefault();
                e.stopPropagation();
            }
            
            ['dragenter', 'dragover'].forEach(eventName => {
                pdfDropArea.addEventListener(eventName, highlight, false);
            });
            
            ['dragleave', 'drop'].forEach(eventName => {
                pdfDropArea.addEventListener(eventName, unhighlight, false);
            });
            
            function highlight() {
                pdfDropArea.classList.add('drag-over');
            }
            
            function unhighlight() {
                pdfDropArea.classList.remove('drag-over');
            }
            
            pdfDropArea.addEventListener('drop', handleDrop, false);
            
            function handleDrop(e) {
                const dt = e.dataTransfer;
                const files = dt.files;
                
                if (files.length) {
                    handleFiles(files);
                }
            }
            
            pdfFileInput.addEventListener('change', function() {
                if (this.files.length) {
                    handleFiles(this.files);
                }
            });
            
            function handleFiles(files) {
                const file = files[0];
                
                if (file.type !== 'application/pdf') {
                    showErrorToast('Only PDF files are allowed.');
                    return;
                }
                
                if (file.size > 10 * 1024 * 1024) {
                    showErrorToast('File size exceeds 10MB limit.');
                    return;
                }
                
                pdfFileName.textContent = file.name;
                pdfFileSize.textContent = formatFileSize(file.size);
                pdfPreview.style.display = 'flex';
                pdfDropArea.style.display = 'none';
            }
            
            if (removePdfBtn) {
                removePdfBtn.addEventListener('click', function() {
                    pdfFileInput.value = '';
                    pdfPreview.style.display = 'none';
                    pdfDropArea.style.display = 'flex';
                });
            }
            
            function formatFileSize(bytes) {
                if (bytes === 0) return '0 Bytes';
                
                const k = 1024;
                const sizes = ['Bytes', 'KB', 'MB', 'GB'];
                const i = Math.floor(Math.log(bytes) / Math.log(k));
                
                return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
            }
        }
        
        const editButtons = document.querySelectorAll('.edit-btn');
        const saveEditBtn = document.getElementById('saveEditBtn');
        const editLoadingIndicator = document.getElementById('editLoadingIndicator');
        const editForm = document.getElementById('editMaterialForm');
        
        editButtons.forEach(btn => {
            btn.addEventListener('click', function() {
                const materialId = this.getAttribute('data-id');
                
                editLoadingIndicator.style.display = 'block';
                editForm.style.display = 'none';
                
                document.getElementById('editFormErrors').textContent = '';
                document.getElementById('editMaterialId').value = materialId;
                
                if (pdfFileInput) {
                    pdfFileInput.value = '';
                    pdfPreview.style.display = 'none';
                    pdfDropArea.style.display = 'flex';
                }
                
                editModal.show();
                
                fetch(`/v1/api/getMaterial/${materialId}`)
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Failed to fetch material details');
                        }
                        return response.json();
                    })
                    .then(data => {
                        document.getElementById('editSubjectCode').value = data.subjectCode || '';
                        document.getElementById('editSubjectTitle').value = data.subjectTitle || '';
                        document.getElementById('editSemester').value = data.semester || '';
                        document.getElementById('editCourse').value = data.course || '';
                        document.getElementById('editYear').value = data.year || '';
                        
                        editLoadingIndicator.style.display = 'none';
                        editForm.style.display = 'block';
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        editModal.hide();
                        showErrorToast(error.message || 'Failed to load material details. Please try again.');
                    });
            });
        });
        
        if (saveEditBtn) {
            saveEditBtn.addEventListener('click', function() {
                if (!editForm.checkValidity()) {
                    editForm.reportValidity();
                    return;
                }
                
                const materialId = document.getElementById('editMaterialId').value;
                const formData = new FormData();
                formData.append('materialId', materialId);
                formData.append('subjectCode', document.getElementById('editSubjectCode').value);
                formData.append('subjectTitle', document.getElementById('editSubjectTitle').value);
                formData.append('semester', document.getElementById('editSemester').value);
                formData.append('course', document.getElementById('editCourse').value);
                formData.append('year', document.getElementById('editYear').value);
                
                if (pdfFileInput && pdfFileInput.files.length > 0) {
                    formData.append('pdf', pdfFileInput.files[0]);
                }
                
                this.disabled = true;
                this.innerHTML = '<span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span> Saving...';
                
                fetch(`/v1/api/updateStudyMaterial`, {
                    method: 'POST',
                    body: formData
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Failed to update material');
                    }
                    return response.json();
                })
                .then(data => {
                    editModal.hide();
                    
                    const row = document.querySelector(`.material-row[data-id="${materialId}"]`);
                    if (row) {
                        row.setAttribute('data-code', formData.get('subjectCode'));
                        row.setAttribute('data-title', formData.get('subjectTitle'));
                        row.setAttribute('data-semester', formData.get('semester'));
                        
                        row.querySelector('.subject-code').textContent = formData.get('subjectCode');
                        row.querySelector('.subject-title').textContent = formData.get('subjectTitle');
                        row.querySelector('td:nth-child(3)').textContent = `Semester ${formData.get('semester')}`;
                        
                        if (data.fileSize) {
                            row.querySelector('.file-size').innerHTML = `<i class="bi bi-file-earmark"></i> ${data.fileSize}`;
                        }
                        
                        if (data.uploadDate) {
                            row.querySelector('.date-badge').innerHTML = `<i class="bi bi-calendar3"></i> ${data.uploadDate}`;
                        }
                    }
                    
                    showSuccessToast('Study material updated successfully.');
                    
                    this.disabled = false;
                    this.innerHTML = '<i class="bi bi-check-lg me-1"></i> Save Changes';
                })
                .catch(error => {
                    console.error('Error:', error);
                    
                    document.getElementById('editFormErrors').textContent = error.message || 'An error occurred. Please try again.';
                    
                    this.disabled = false;
                    this.innerHTML = '<i class="bi bi-check-lg me-1"></i> Save Changes';
                });
            });
        }
        
        const deleteButtons = document.querySelectorAll('.delete-btn');
        const confirmDeleteBtn = document.getElementById('confirmDelete');
        let materialIdToDelete = null;
        let materialRowToDelete = null;
        
        deleteButtons.forEach(btn => {
            btn.addEventListener('click', function() {
                materialIdToDelete = this.getAttribute('data-id');
                materialRowToDelete = document.querySelector(`.material-row[data-id="${materialIdToDelete}"]`);
            });
        });
        
        if (confirmDeleteBtn) {
            confirmDeleteBtn.addEventListener('click', function() {
                if (materialIdToDelete) {
                    this.disabled = true;
                    this.innerHTML = '<span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span> Deleting...';
                    
                    fetch(`/v1/api/deleteMaterial/${materialIdToDelete}`, {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    })
                    .then(response => {
                        if (response.ok) {
                            return response.json();
                        }
                        throw new Error('Failed to delete material');
                    })
                    .then(data => {
                        deleteModal.hide();
                        
                        if (materialRowToDelete) {
                            materialRowToDelete.remove();
                        }
                        
                        showSuccessToast('Study material deleted successfully.');
                        
                        const visibleRows = document.querySelectorAll('.material-row:not([style*="display: none"])');
                        if (document.getElementById('startRange')) {
                            document.getElementById('startRange').textContent = visibleRows.length > 0 ? '1' : '0';
                            document.getElementById('endRange').textContent = visibleRows.length;
                            document.getElementById('totalItems').textContent = visibleRows.length;
                        }
                        
                        if (visibleRows.length === 0 && emptyState && tableContainer && paginationContainer) {
                            emptyState.style.display = 'block';
                            tableContainer.style.display = 'none';
                            paginationContainer.style.display = 'none';
                        }
                        
                        confirmDeleteBtn.disabled = false;
                        confirmDeleteBtn.innerHTML = '<i class="bi bi-trash me-1"></i> Delete';
                    })
                    .catch(error => {
                        deleteModal.hide();
                        
                        showErrorToast(error.message || 'An error occurred. Please try again.');
                        
                        console.error('Error:', error);
                        
                        confirmDeleteBtn.disabled = false;
                        confirmDeleteBtn.innerHTML = '<i class="bi bi-trash me-1"></i> Delete';
                    });
                }
            });
        }
        
        const addAnimation = (element, animation) => {
            element.classList.add(animation);
            element.addEventListener('animationend', () => {
                element.classList.remove(animation);
            });
        };
        
        if (searchInput.value) {
            searchInput.dispatchEvent(new Event('input'));
        }
    });
</script>

</body>
</html>