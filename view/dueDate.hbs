<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Due Date Management</title>
    <link rel="icon" href="https://i.postimg.cc/kGVvWqPn/edit-user-1.png">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
    <style>
        @import url("https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap");
        
        :root {
            --primary: #4361ee;
            --primary-light: #4361ee15;
            --primary-dark: #3a56d4;
            --secondary: #2b2d42;
            --success: #28a745;
            --info: #0dcaf0;
            --warning: #ffc107;
            --danger: #dc3545;
            --light: #f8f9fa;
            --dark: #212529;
            --gray: #6c757d;
            --border-radius: 10px;
            --box-shadow: 0 10px 20px rgba(0, 0, 0, 0.05);
            --transition: all 0.3s ease;
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: "Poppins", sans-serif;
        }
        
        body {
            background-color: #f5f7ff;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            padding: 20px;
        }
        
        .card {
            width: 100%;
            max-width: 450px;
            background-color: #fff;
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
            overflow: hidden;
            transition: var(--transition);
        }
        
        .card:hover {
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);
            {{!-- transform: translateY(-5px); --}}
        }
        
        .card-header {
            background: linear-gradient(135deg, var(--primary), var(--primary-dark));
            color: white;
            padding: 25px 30px;
            position: relative;
            overflow: hidden;
        }
        
        .card-header h1 {
            font-size: 1.8rem;
            font-weight: 600;
            margin: 0;
            position: relative;
            z-index: 1;
        }
        
        .card-header p {
            margin: 5px 0 0;
            opacity: 0.8;
            font-size: 0.9rem;
            position: relative;
            z-index: 1;
        }
        
        .card-header::before {
            content: '';
            position: absolute;
            top: -50px;
            right: -50px;
            width: 150px;
            height: 150px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 50%;
        }
        
        .card-header::after {
            content: '';
            position: absolute;
            bottom: -60px;
            left: -60px;
            width: 180px;
            height: 180px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 50%;
        }
        
        .card-body {
            padding: 30px;
        }
        
        .form-group {
            margin-bottom: 20px;
        }
        
        .form-label {
            display: block;
            margin-bottom: 8px;
            color: var(--secondary);
            font-weight: 500;
            font-size: 0.95rem;
        }
        
        .form-control {
            width: 100%;
            padding: 12px 15px;
            border: 1px solid #e1e5ee;
            border-radius: 8px;
            font-size: 0.95rem;
            transition: var(--transition);
            background-color: #f9fafc;
        }
        
        .form-control:focus {
            outline: none;
            border-color: var(--primary);
            box-shadow: 0 0 0 3px var(--primary-light);
            background-color: #fff;
        }
        
        .input-icon-wrapper {
            position: relative;
        }
        
        .input-icon {
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            left: 15px;
            color: var(--gray);
        }
        
        .input-with-icon {
            padding-left: 45px;
        }
        
        .select-wrapper {
            position: relative;
        }
        
        .select-wrapper::after {
            content: '\f107';
            font-family: 'Font Awesome 6 Free';
            font-weight: 900;
            position: absolute;
            top: 50%;
            right: 15px;
            transform: translateY(-50%);
            color: var(--gray);
            pointer-events: none;
        }
        
        select.form-control {
            appearance: none;
            padding-right: 40px;
            cursor: pointer;
        }
        
        .btn-group {
            display: flex;
            justify-content: space-between;
            gap: 15px;
            margin-top: 30px;
        }
        
        .btn {
            flex: 1;
            padding: 12px 20px;
            border: none;
            border-radius: 8px;
            font-weight: 500;
            cursor: pointer;
            transition: var(--transition);
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
        }
        
        .btn-primary {
            background-color: var(--primary);
            color: white;
        }
        
        .btn-primary:hover {
            background-color: var(--primary-dark);
            transform: translateY(-2px);
        }
        
        .btn-secondary {
            background-color: #e9ecef;
            color: var(--secondary);
        }
        
        .btn-secondary:hover {
            background-color: #dee2e6;
            transform: translateY(-2px);
        }
        
        .btn i {
            font-size: 0.9rem;
        }
        
        /* Loading spinner */
        .spinner {
            display: inline-block;
            width: 20px;
            height: 20px;
            border: 3px solid rgba(255, 255, 255, 0.3);
            border-radius: 50%;
            border-top-color: #fff;
            animation: spin 1s ease-in-out infinite;
        }
        
        @keyframes spin {
            to { transform: rotate(360deg); }
        }
        
        /* Toast styles */
        .toastify {
            padding: 15px 20px;
            color: #ffffff;
            display: inline-block;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.15);
            background: #353535;
            position: fixed;
            top: -150px;
            right: 15px;
            opacity: 0;
            transition: all 0.4s cubic-bezier(0.215, 0.61, 0.355, 1);
            border-radius: 10px;
            cursor: pointer;
            text-decoration: none;
            max-width: 300px;
            z-index: 10000;
        }
        
        .toastify.on {
            opacity: 1;
            transform: translateY(165px);
        }
        
        .toastify-success {
            background: linear-gradient(135deg, #28a745, #20c997);
        }
        
        .toastify-error {
            background: linear-gradient(135deg, #dc3545, #ff6b6b);
        }
        
        .toastify-info {
            background: linear-gradient(135deg, #0d6efd, #0dcaf0);
        }
        
        .toastify-warning {
            background: linear-gradient(135deg, #ffc107, #fd7e14);
        }
        
        .toastify-content {
            display: flex;
            align-items: center;
            gap: 12px;
        }
        
        .toastify-icon {
            font-size: 22px;
        }
        
        .toastify-text {
            flex: 1;
            font-size: 0.95rem;
        }
        
        .toastify-close {
            color: white;
            font-weight: bold;
            font-size: 14px;
            background: transparent;
            outline: none;
            border: none;
            padding: 0;
            cursor: pointer;
            opacity: 0.7;
            transition: 0.3s ease;
            align-self: flex-start;
        }
        
        .toastify-close:hover {
            opacity: 1;
        }
        
        @media (max-width: 480px) {
            .card-header {
                padding: 20px;
            }
            
            .card-header h1 {
                font-size: 1.5rem;
            }
            
            .card-body {
                padding: 20px;
            }
            
            .btn {
                padding: 10px 15px;
            }
        }
    </style>
</head>
<body>
    <div class="card">
        <div class="card-header">
            <h1>{{course}} - {{year}} Update Due Dates</h1>
            <p>Set fee payment deadlines for students</p>
        </div>
        <div class="card-body">
            <form id="dueDateForm">
                <div class="form-group">
                    <label for="tutionDueDate" class="form-label">Tuition Fees Due Date</label>
                    <div class="input-icon-wrapper">
                        <i class="fas fa-calendar-alt input-icon"></i>
                        <input type="date" id="tutionDueDate" name="tutionDueDate" class="form-control input-with-icon" required />
                    </div>
                </div>
                
                <div class="form-group">
                    <label for="examDueDate" class="form-label">Exam Fees Due Date</label>
                    <div class="input-icon-wrapper">
                        <i class="fas fa-calendar-alt input-icon"></i>
                        <input type="date" id="examDueDate" name="examDueDate" class="form-control input-with-icon" required />
                    </div>
                </div>
                
                <div class="btn-group">
                    <button type="button" id="backBtn" class="btn btn-secondary">
                        <i class="fas fa-arrow-left"></i> Back
                    </button>
                    <button type="submit" id="updateBtn" class="btn btn-primary">
                        <span id="btnText">Update Dates</span>
                        <span id="loadingSpinner" class="spinner" style="display: none;"></span>
                    </button>
                </div>
            </form>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('dueDateForm');
            const updateBtn = document.getElementById('updateBtn');
            const backBtn = document.getElementById('backBtn');
            const btnText = document.getElementById('btnText');
            const loadingSpinner = document.getElementById('loadingSpinner');
            
            function showToast(message, type = 'success') {
                const iconMap = {
                    'success': '<i class="fas fa-check-circle"></i>',
                    'error': '<i class="fas fa-exclamation-circle"></i>',
                    'info': '<i class="fas fa-info-circle"></i>',
                    'warning': '<i class="fas fa-exclamation-triangle"></i>'
                };
                
                const icon = iconMap[type] || iconMap.info;
                
                Toastify({
                    text: `<div class="toastify-content">
                            <div class="toastify-icon">${icon}</div>
                            <div class="toastify-text">${message}</div>
                          </div>`,
                    duration: 3000,
                    close: true,
                    gravity: "top",
                    position: "right",
                    className: `toastify-${type}`,
                    escapeMarkup: false,
                    stopOnFocus: true,
                    onClick: function(){}
                }).showToast();
            }
            
            const today = new Date().toISOString().split('T')[0];
            document.getElementById('tutionDueDate').min = today;
            document.getElementById('examDueDate').min = today;
            
            backBtn.addEventListener('click', function() {
                window.location.href = '/v1/api/dashboard#fees';
            });
            
            form.addEventListener('submit', function(e) {
                e.preventDefault();
                
                const tutionDueDate = document.getElementById('tutionDueDate').value;
                const examDueDate = document.getElementById('examDueDate').value;
                
                if (!tutionDueDate || !examDueDate) {
                    showToast('Please fill in all fields', 'error');
                    return;
                }
                
                btnText.style.display = 'none';
                loadingSpinner.style.display = 'inline-block';
                updateBtn.disabled = true;
                
                const formData = {
                    year: '{{year}}',
                    course: '{{course}}',
                    tutionDueDate: tutionDueDate,
                    examDueDate: examDueDate
                };
                
                fetch('/v1/api/updateDueDate', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(formData)
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    btnText.style.display = 'inline';
                    loadingSpinner.style.display = 'none';
                    updateBtn.disabled = false;
                    
                    showToast('Due dates updated successfully!', 'success');
                    
                    setTimeout(() => {
                        form.reset();
                    }, 1000);
                })
                .catch(error => {
                    btnText.style.display = 'inline';
                    loadingSpinner.style.display = 'none';
                    updateBtn.disabled = false;
                    
                    console.error('Error updating due dates:', error);
                    showToast('Failed to update due dates. Please try again.', 'error');
                });
            });
        });
    </script>
</body>
</html>

