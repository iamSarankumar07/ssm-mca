<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Students Management</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');
        
        :root {
            --primary: #4f46e5;
            --primary-hover: #4338ca;
            --primary-light: rgba(79, 70, 229, 0.1);
            --secondary: #f9fafb;
            --danger: #ef4444;
            --danger-hover: #dc2626;
            --success: #10b981;
            --success-hover: #059669;
            --warning: #f59e0b;
            --dark: #111827;
            --gray: #6b7280;
            --light-gray: #e5e7eb;
            --white: #ffffff;
            --card-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
            --border-radius: 0.75rem;
        }
        
        html, body {
            font-family: 'Inter', sans-serif;
            background-color: #f3f4f8;
            color: var(--dark);
            line-height: 1.6;
            height: 100%;
            margin: 0;
            padding: 0;
            overflow-x: hidden;
        }
        
        .page-container {
            display: flex;
            flex-direction: column;
            height: 100vh;
            width: 100%;
            margin: 0;
            padding: 0;
            overflow: hidden;
        }
        
        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1rem;
            flex-shrink: 0;
            background-color: var(--white);
            border-bottom: 1px solid var(--light-gray);
        }
        
        .header h1 {
            font-size: 1.75rem;
            font-weight: 700;
            color: var(--dark);
            margin: 0;
        }
        
        .main-content {
            flex: 1;
            display: flex;
            flex-direction: column;
            overflow: hidden;
            position: relative;
            padding: 0;
        }
        
        .card-header-content {
            display: flex;
            align-items: center;
        }
        
        .back-button {
            margin-right: 1rem;
            background-color: var(--white);
            border: 1px solid var(--light-gray);
            border-radius: 0.5rem;
            padding: 0.5rem 0.75rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            font-weight: 500;
            color: var(--dark);
            text-decoration: none;
            transition: all 0.2s ease;
            box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
        }
        
        .back-button:hover {
            background-color: var(--secondary);
            color: var(--primary);
        }
        
        .card {
            background-color: var(--white);
            border-radius: var(--border-radius);
            border: none;
            box-shadow: var(--card-shadow);
            overflow: hidden;
            margin-bottom: 0;
            display: flex;
            flex-direction: column;
            height: 100%;
        }
        
        .card:hover {
            box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
        }
        
        .card-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1rem 1.25rem;
            border-bottom: 1px solid var(--light-gray);
            background-color: var(--white);
            flex-shrink: 0;
        }
        
        .card-title {
            font-size: 1.25rem;
            font-weight: 600;
            color: var(--dark);
            margin: 0;
        }
        
        .card-body {
            padding: 1.25rem;
            overflow: hidden;
            display: flex;
            flex-direction: column;
            flex: 1;
        }
        
        .filters {
            display: flex;
            gap: 1rem;
            margin-bottom: 1.5rem;
            flex-shrink: 0;
            flex-wrap: wrap;
            align-items: center;
        }
        
        .filter-item {
            flex: 1;
            min-width: 200px;
            max-width: 300px;
        }
        
        .data-container {
            flex: 1;
            overflow-y: auto;
            padding-right: 0.5rem;
            margin-top: 0.75rem;
        }
        
        .form-control, .form-select {
            padding: 0.6rem 0.75rem;
            border: 1px solid var(--light-gray);
            border-radius: 0.5rem;
            font-size: 0.875rem;
            transition: all 0.2s ease;
        }
        
        .form-control:focus, .form-select:focus {
            border-color: var(--primary);
            box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.15);
        }
        
        .btn {
            padding: 0.5rem 1rem;
            border-radius: 0.5rem;
            font-weight: 500;
            transition: all 0.2s ease;
            font-size: 0.875rem;
        }
        
        .btn-primary {
            background-color: var(--primary);
            border-color: var(--primary);
        }
        
        .btn-primary:hover {
            background-color: var(--primary-hover);
            border-color: var(--primary-hover);
        }
        
        .btn-success {
            background-color: var(--success);
            border-color: var(--success);
        }
        
        .btn-success:hover {
            background-color: var(--success-hover);
            border-color: var(--success-hover);
        }
        
        .btn-danger {
            background-color: var(--danger);
            border-color: var(--danger);
        }
        
        .btn-danger:hover {
            background-color: var(--danger-hover);
            border-color: var(--danger-hover);
        }
        
        .btn-sm {
            padding: 0.35rem 0.7rem;
            font-size: 0.8rem;
        }
        
        .badge {
            padding: 0.35em 0.65em;
            font-size: 0.75em;
            font-weight: 600;
            border-radius: 0.375rem;
        }
        
        .badge-male {
            background-color: rgba(59, 130, 246, 0.1);
            color: #3b82f6;
        }
        
        .badge-female {
            background-color: rgba(236, 72, 153, 0.1);
            color: #ec4899;
        }
        
        .student-card {
            border-radius: var(--border-radius);
            border: 1px solid var(--light-gray);
            padding: 1.25rem;
            margin-bottom: 1rem;
            transition: all 0.2s ease;
            background-color: var(--white);
        }
        
        .student-card:hover {
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            transform: translateY(-2px);
        }
        
        .student-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1rem;
        }
        
        .student-title {
            font-weight: 600;
            font-size: 1.1rem;
            color: var(--dark);
        }
        
        .student-details {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 1rem;
            margin-bottom: 1rem;
        }
        
        .student-detail {
            display: flex;
            flex-direction: column;
        }
        
        .detail-label {
            font-size: 0.8rem;
            color: var(--gray);
            margin-bottom: 0.25rem;
        }
        
        .detail-value {
            font-size: 0.95rem;
            font-weight: 500;
            color: var(--dark);
        }
        
        .student-actions {
            display: flex;
            justify-content: flex-end;
            gap: 0.75rem;
        }
        
        .avatar {
            width: 2.5rem;
            height: 2.5rem;
            border-radius: 50%;
            overflow: hidden;
            background-color: var(--primary);
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 0.75rem;
            color: var(--white);
            font-weight: 600;
            font-size: 1rem;
        }
        
        .avatar img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
        
        .student-info {
            display: flex;
            align-items: center;
        }
        
        .student-info-details {
            display: flex;
            flex-direction: column;
        }
        
        .student-name {
            font-weight: 600;
            font-size: 1rem;
            color: var(--dark);
        }
        
        .student-position {
            font-size: 0.85rem;
            color: var(--gray);
        }
        
        .loading-spinner {
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 3rem;
        }
        
        .spinner {
            width: 40px;
            height: 40px;
            border: 4px solid rgba(99, 102, 241, 0.1);
            border-radius: 50%;
            border-top-color: var(--primary);
            animation: spin 1s ease-in-out infinite;
        }
        
        @keyframes spin {
            to { transform: rotate(360deg); }
        }
        
        .empty-state {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            padding: 3rem 1rem;
            text-align: center;
        }
        
        .empty-state-icon {
            font-size: 3rem;
            color: var(--light-gray);
            margin-bottom: 1rem;
        }
        
        .empty-state-text {
            color: var(--gray);
            font-size: 1rem;
            max-width: 300px;
            margin: 0 auto;
        }
        
        .modal-content {
            border-radius: var(--border-radius);
            border: none;
            box-shadow: var(--card-shadow);
        }
        
        .modal-header {
            background-color: var(--primary);
            color: white;
            padding: 1.25rem 1.5rem;
            border-bottom: none;
        }
        
        .modal-title {
            font-weight: 600;
            font-size: 1.25rem;
            color: white;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        .modal-body {
            padding: 1.5rem;
        }
        
        .modal-footer {
            border-top: 1px solid var(--light-gray);
            padding: 1.25rem 1.5rem;
        }
        
        .form-label {
            font-weight: 500;
            margin-bottom: 0.5rem;
            font-size: 0.95rem;
            color: var(--dark);
        }
        
        .form-text {
            font-size: 0.85rem;
            color: var(--gray);
        }
        
        .table-view .table {
            border-collapse: separate;
            border-spacing: 0;
            width: 100%;
            margin-bottom: 0;
            border-radius: var(--border-radius);
            overflow: hidden;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
        }
        
        /* Modern table header styling */
        .table-view .table th {
            background: linear-gradient(to right, var(--primary), var(--primary-hover));
            padding: 0.75rem 1rem;
            font-weight: 600;
            color: white;
            border: none;
            white-space: nowrap;
            text-transform: uppercase;
            font-size: 0.7rem;
            letter-spacing: 0.05em;
            position: relative;
            overflow: hidden;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }
        
        .table-view .table th::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(to right, rgba(255, 255, 255, 0.1), transparent);
            transform: translateX(-100%);
            transition: transform 0.5s ease;
        }
        
        .table-view .table th:hover::after {
            transform: translateX(100%);
        }
        
        .table-view .table th:first-child {
            border-top-left-radius: var(--border-radius);
        }
        
        .table-view .table th:last-child {
            border-top-right-radius: var(--border-radius);
        }
        
        .table-view .table td {
            padding: 0.75rem 1rem;
            vertical-align: middle;
            border-bottom: 1px solid var(--light-gray);
            color: var(--dark);
            font-size: 0.875rem;
            background-color: var(--white);
        }
        
        .table-view .table tr:last-child td {
            border-bottom: none;
        }
        
        .table-view .table tr:last-child td:first-child {
            border-bottom-left-radius: var(--border-radius);
        }
        
        .table-view .table tr:last-child td:last-child {
            border-bottom-right-radius: var(--border-radius);
        }
        
        .table-view .table tr:hover td {
            background-color: var(--primary-light);
        }
        
        .view-toggle {
            display: flex;
            gap: 0.5rem;
            margin-left: 1rem;
        }
        
        .view-toggle-btn {
            padding: 0.4rem 0.6rem;
            border-radius: 0.375rem;
            background-color: var(--secondary);
            border: 1px solid var(--light-gray);
            color: var(--gray);
            font-size: 0.85rem;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.2s ease;
        }
        
        .view-toggle-btn:hover {
            background-color: rgba(99, 102, 241, 0.1);
            color: var(--primary);
        }
        
        .view-toggle-btn.active {
            background-color: var(--primary);
            color: var(--white);
            border-color: var(--primary);
        }
        
        .actions-cell {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
        }
        
        .action-btn {
            width: 32px;
            height: 32px;
            border-radius: 6px;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            color: #fff;
            transition: all 0.2s ease;
            border: none;
            cursor: pointer;
            position: relative;
            overflow: hidden;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }
        
        .action-btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(255, 255, 255, 0.1);
            transform: translateY(100%);
            transition: transform 0.2s ease;
        }
        
        .action-btn:hover::before {
            transform: translateY(0);
        }
        
        .action-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
        }
        
        .action-btn:active {
            transform: translateY(0);
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }
        
        .view-btn {
            background-color: var(--primary);
        }
        
        .edit-btn {
            background-color: var(--warning);
        }
        
        .delete-btn {
            background-color: var(--danger);
        }
        
        .student-profile {
            display: flex;
            flex-direction: column;
            align-items: center;
            padding: 1.5rem;
            background-color: rgba(79, 70, 229, 0.05);
            border-radius: 12px;
            margin-bottom: 1.5rem;
        }
        
        .student-avatar {
            width: 120px;
            height: 120px;
            border-radius: 50%;
            object-fit: cover;
            border: 4px solid white;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
            margin-bottom: 1rem;
        }
        
        .student-info-card {
            border-radius: var(--border-radius);
            border: 1px solid var(--light-gray);
            overflow: hidden;
            transition: all 0.2s ease;
            background-color: var(--white);
            height: 100%;
        }
        
        .student-info-card:hover {
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            transform: translateY(-2px);
        }
        
        .student-info-header {
            background-color: var(--secondary);
            padding: 0.75rem 1rem;
            border-bottom: 1px solid var(--light-gray);
        }
        
        .student-info-title {
            margin: 0;
            font-size: 0.875rem;
            font-weight: 600;
            color: var(--dark);
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        .student-info-title i {
            color: var(--primary);
        }
        
        .student-info-body {
            padding: 1rem;
        }
        
        .info-table {
            width: 100%;
            margin-bottom: 0;
        }
        
        .info-table tr {
            border-bottom: 1px solid var(--light-gray);
        }
        
        .info-table tr:last-child {
            border-bottom: none;
        }
        
        .info-table th {
            padding: 0.5rem 0;
            font-weight: 500;
            color: var(--gray);
            width: 40%;
            font-size: 0.75rem;
            vertical-align: top;
        }
        
        .info-table td {
            padding: 0.5rem 0;
            color: var(--dark);
            font-size: 0.75rem;
            vertical-align: top;
        }
        
        .nav-tabs {
            border-bottom: 1px solid var(--light-gray);
            margin-bottom: 1.5rem;
        }
        
        .nav-tabs .nav-link {
            color: var(--gray);
            font-weight: 500;
            border: none;
            border-bottom: 2px solid transparent;
            padding: 0.75rem 1.25rem;
            margin-bottom: -1px;
            transition: all 0.2s ease;
        }
        
        .nav-tabs .nav-link:hover {
            color: var(--primary);
            border-color: transparent;
        }
        
        .nav-tabs .nav-link.active {
            color: var(--primary);
            border-color: var(--primary);
            background-color: transparent;
        }
        
        .skeleton {
            background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
            background-size: 200% 100%;
            animation: skeleton-loading 1.5s infinite;
            border-radius: 4px;
        }
        
        .skeleton-card {
            border-radius: var(--border-radius);
            border: 1px solid var(--light-gray);
            padding: 1.25rem;
            margin-bottom: 1rem;
            background-color: var(--white);
        }
        
        .skeleton-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1rem;
        }
        
        .skeleton-avatar {
            width: 2.5rem;
            height: 2.5rem;
            border-radius: 50%;
        }
        
        .skeleton-text {
            height: 1rem;
            margin-bottom: 0.5rem;
        }
        
        .skeleton-text.sm {
            width: 30%;
            height: 0.8rem;
        }
        
        .skeleton-text.md {
            width: 50%;
        }
        
        .skeleton-text.lg {
            width: 80%;
        }
        
        .skeleton-badge {
            width: 4rem;
            height: 1.5rem;
            border-radius: 0.375rem;
        }
        
        .skeleton-details {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 1rem;
            margin-bottom: 1rem;
        }
        
        .skeleton-detail {
            display: flex;
            flex-direction: column;
        }
        
        .skeleton-actions {
            display: flex;
            justify-content: flex-end;
            gap: 0.75rem;
        }
        
        .skeleton-button {
            width: 6rem;
            height: 2rem;
            border-radius: var(--border-radius);
        }
        
        @keyframes skeleton-loading {
            0% {
                background-position: 200% 0;
            }
            100% {
                background-position: -200% 0;
            }
        }
        
        #skeletonLoading {
            display: none;
        }
        
        #cardViewSkeleton, #tableViewSkeleton {
            display: none;
        }
        
        .toastify {
            font-family: 'Inter', sans-serif;
            border-radius: 0.5rem;
            font-weight: 500;
            padding: 1rem 1.5rem;
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
        }
        
        .toastify-success {
            background: linear-gradient(135deg, var(--success) 0%, var(--success-hover) 100%);
        }
        
        .toastify-error {
            background: linear-gradient(135deg, var(--danger) 0%, var(--danger-hover) 100%);
        }
        
        .toastify-info {
            background: linear-gradient(135deg, var(--primary) 0%, var(--primary-hover) 100%);
        }
        
        .header-actions {
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }
        
        .search-container {
            position: relative;
            width: 100%;
            max-width: 250px;
        }
        
        .search-input {
            width: 100%;
            padding: 0.5rem 0.75rem 0.5rem 2.25rem;
            border: 1px solid var(--light-gray);
            border-radius: 0.5rem;
            font-size: 0.875rem;
            transition: all 0.2s ease;
            background-color: white;
            box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
        }
        
        .search-input:focus {
            outline: none;
            border-color: var(--primary);
            box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.2);
        }
        
        .search-icon {
            position: absolute;
            left: 0.75rem;
            top: 50%;
            transform: translateY(-50%);
            color: var(--gray);
            font-size: 0.875rem;
        }
        
        .compact-stats {
            display: flex;
            gap: 0.5rem;
            flex-wrap: wrap;
        }
        
        .stat-pill {
            display: flex;
            align-items: center;
            background-color: white;
            border-radius: 50px;
            padding: 0.3rem 0.6rem;
            box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
            font-size: 0.75rem;
            font-weight: 600;
        }
        
        .stat-pill i {
            margin-right: 0.3rem;
            font-size: 0.7rem;
        }
        
        .stat-pill.total {
            color: var(--primary);
            background-color: var(--primary-light);
        }
        
        .stat-pill.male {
            color: #3b82f6;
            background-color: rgba(59, 130, 246, 0.1);
        }
        
        .stat-pill.female {
            color: #ec4899;
            background-color: rgba(236, 72, 153, 0.1);
        }
        
        .filter-row {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            margin-bottom: 0.75rem;
            flex-wrap: wrap;
            background-color: var(--white);
            padding: 0.75rem;
            border-radius: 0.5rem;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        }
        
        .filter-group {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        .filter-label {
            font-weight: 500;
            font-size: 0.8rem;
            color: var(--gray);
            white-space: nowrap;
        }
        
        .filter-select {
            min-width: 120px;
            padding: 0.4rem 0.6rem;
            font-size: 0.8rem;
        }
        
        @media (max-width: 768px) {
            .card-header {
                flex-direction: column;
                align-items: flex-start;
                gap: 0.75rem;
                padding: 0.75rem 1rem;
            }
            
            .header-actions {
                width: 100%;
                flex-wrap: wrap;
            }
            
            .view-toggle {
                margin-left: 0;
                margin-top: 0.5rem;
            }
            
            .filters {
                max-height: none;
                overflow: visible;
            }
            
            .filter-item {
                max-width: 100%;
            }
            
            .student-details {
                grid-template-columns: 1fr;
            }
            
            .student-actions {
                flex-direction: column;
                gap: 0.5rem;
            }
            
            .student-actions .btn {
                width: 100%;
            }
            
            .search-container {
                max-width: 100%;
            }
            
            .data-container {
                padding-right: 0;
            }
            
            .filter-row {
                flex-direction: column;
                align-items: stretch;
                padding: 0.5rem;
                gap: 0.5rem;
            }
            
            .filter-group {
                flex-direction: column;
                align-items: flex-start;
                gap: 0.25rem;
            }
            
            .compact-stats {
                justify-content: center;
                width: 100%;
                margin-top: 0.5rem;
            }
        }
        
        @media (max-width: 992px) {
            .table-responsive {
                overflow-x: auto;
            }
            
            .filter-row {
                flex-wrap: wrap;
            }
        }
    </style>
</head>
<body>
    <div class="page-container">
        <div class="main-content">
            <div class="card">
                <div class="card-header">
                    <div class="card-header-content">
                        <a href="/v1/api/dashboard#students" class="back-button">
                            <i class="fas fa-arrow-left"></i> Back
                        </a>
                        <h2 class="card-title">{{course}} - {{year}} Students List</h2>
                    </div>
                    <div class="header-actions">
                        <div class="view-toggle">
                            <button class="view-toggle-btn active" data-view="card">
                                <i class="fas fa-th-large me-1"></i> Card
                            </button>
                            <button class="view-toggle-btn" data-view="table">
                                <i class="fas fa-table me-1"></i> Table
                            </button>
                        </div>
                        <a href="/v1/api/getStudentRegister?course={{course}}" class="btn btn-primary">
                            <i class="fas fa-plus me-2"></i>Add Student
                        </a>
                    </div>
                </div>
                <div class="card-body">
                    <div class="filter-row">
                        <div class="filter-group">
                            <span class="filter-label">Gender:</span>
                            <select id="genderFilter" class="form-select filter-select">
                                <option value="">All Genders</option>
                                <option value="Male">Male</option>
                                <option value="Female">Female</option>
                            </select>
                        </div>
                        
                        <div class="search-container">
                            <i class="fas fa-search search-icon"></i>
                            <input type="text" id="searchInput" class="search-input" placeholder="Search students...">
                        </div>
                        
                        <div class="compact-stats">
                            <div class="stat-pill total">
                                <i class="fas fa-users"></i>
                                <span>Total: <span id="totalStudents">0</span></span>
                            </div>
                            <div class="stat-pill male">
                                <i class="fas fa-male"></i>
                                <span>Male: <span id="maleStudents">0</span></span>
                            </div>
                            <div class="stat-pill female">
                                <i class="fas fa-female"></i>
                                <span>Female: <span id="femaleStudents">0</span></span>
                            </div>
                        </div>
                    </div>

                    <div class="data-container">
                        <div id="loadingSpinner" class="loading-spinner">
                            <div class="spinner"></div>
                        </div>

                        <div id="skeletonLoading">
                            <div id="cardViewSkeleton" class="card-view">
                            </div>

                            <div id="tableViewSkeleton" class="table-view" style="display: none;">
                                <div class="table-responsive">
                                    <table class="table">
                                        <thead>
                                            <tr>
                                                <th>#</th>
                                                <th>Student</th>
                                                <th>Student ID</th>
                                                <th>Register No</th>
                                                <th>Gender</th>
                                                <th>Date of Birth</th>
                                                <th>Phone</th>
                                                <th>Email</th>
                                                <th>Actions</th>
                                            </tr>
                                        </thead>
                                        <tbody id="tableBodySkeleton">
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>

                        <div id="emptyState" class="empty-state" style="display: none;">
                            <div class="empty-state-icon">
                                <i class="fas fa-users-slash"></i>
                            </div>
                            <div class="empty-state-text">
                                No students found matching your filters.
                            </div>
                        </div>

                        <div id="cardView" class="card-view" style="display: none;">
                        </div>

                        <div id="tableView" class="table-view" style="display: none;">
                            <div class="table-responsive">
                                <table class="table">
                                    <thead>
                                        <tr>
                                            <th>#</th>
                                            <th>Student</th>
                                            <th>Student ID</th>
                                            <th>Register No</th>
                                            <th>Gender</th>
                                            <th>Date of Birth</th>
                                            <th>Phone</th>
                                            <th>Email</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody id="tableBody">
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div id="modalsContainer"></div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
    <script>
        let students = [];
        let filteredStudents = [];
        let currentView = 'card';
        let isLoading = false;
        
        const loadingSpinner = document.getElementById('loadingSpinner');
        const skeletonLoading = document.getElementById('skeletonLoading');
        const cardViewSkeleton = document.getElementById('cardViewSkeleton');
        const tableViewSkeleton = document.getElementById('tableViewSkeleton');
        const tableBodySkeleton = document.getElementById('tableBodySkeleton');
        const emptyState = document.getElementById('emptyState');
        const cardView = document.getElementById('cardView');
        const tableView = document.getElementById('tableView');
        const tableBody = document.getElementById('tableBody');
        const genderFilter = document.getElementById('genderFilter');
        const searchInput = document.getElementById('searchInput');
        const viewToggleBtns = document.querySelectorAll('.view-toggle-btn');
        
        function showToast(message, type = 'info') {
            const toastClass = type === 'success' ? 'toastify-success' : 
                              type === 'error' ? 'toastify-error' : 'toastify-info';
            
            Toastify({
                text: message,
                duration: 3000,
                close: true,
                gravity: "top",
                position: "right",
                className: `toastify ${toastClass}`,
                stopOnFocus: true,
            }).showToast();
        }
        
        document.addEventListener('DOMContentLoaded', function() {
            generateSkeletons();
            
            fetchStudentData();
            
            genderFilter.addEventListener('change', filterStudents);
            searchInput.addEventListener('input', filterStudents);
            
            viewToggleBtns.forEach(btn => {
                btn.addEventListener('click', function() {
                    const view = this.getAttribute('data-view');
                    setActiveView(view);
                });
            });
        });
        
        function generateSkeletons() {
            cardViewSkeleton.innerHTML = '';
            for (let i = 0; i < 5; i++) {
                const skeletonCard = document.createElement('div');
                skeletonCard.className = 'skeleton-card';
                skeletonCard.innerHTML = `
                    <div class="skeleton-header">
                        <div class="d-flex align-items-center">
                            <div class="skeleton skeleton-avatar me-3"></div>
                            <div>
                                <div class="skeleton skeleton-text md mb-1"></div>
                                <div class="skeleton skeleton-text sm"></div>
                            </div>
                        </div>
                        <div class="skeleton skeleton-badge"></div>
                    </div>
                    <div class="skeleton-details">
                        <div class="skeleton-detail">
                            <div class="skeleton skeleton-text sm mb-1"></div>
                            <div class="skeleton skeleton-text md"></div>
                        </div>
                        <div class="skeleton-detail">
                            <div class="skeleton skeleton-text sm mb-1"></div>
                            <div class="skeleton skeleton-text md"></div>
                        </div>
                        <div class="skeleton-detail">
                            <div class="skeleton skeleton-text sm mb-1"></div>
                            <div class="skeleton skeleton-text md"></div>
                        </div>
                        <div class="skeleton-detail">
                            <div class="skeleton skeleton-text sm mb-1"></div>
                            <div class="skeleton skeleton-text md"></div>
                        </div>
                    </div>
                    <div class="skeleton-actions">
                        <div class="skeleton skeleton-button"></div>
                        <div class="skeleton skeleton-button"></div>
                        <div class="skeleton skeleton-button"></div>
                    </div>
                `;
                cardViewSkeleton.appendChild(skeletonCard);
            }
            
            tableBodySkeleton.innerHTML = '';
            for (let i = 0; i < 5; i++) {
                const skeletonRow = document.createElement('tr');
                skeletonRow.innerHTML = `
                    <td>
                        <div class="skeleton skeleton-text sm"></div>
                    </td>
                    <td>
                        <div class="d-flex align-items-center">
                            <div class="skeleton skeleton-avatar me-3"></div>
                            <div>
                                <div class="skeleton skeleton-text md mb-1"></div>
                                <div class="skeleton skeleton-text sm"></div>
                            </div>
                        </div>
                    </td>
                    <td><div class="skeleton skeleton-text md"></div></td>
                    <td><div class="skeleton skeleton-text md"></div></td>
                    <td><div class="skeleton skeleton-badge"></div></td>
                    <td><div class="skeleton skeleton-text md"></div></td>
                    <td><div class="skeleton skeleton-text md"></div></td>
                    <td><div class="skeleton skeleton-text md"></div></td>
                    <td>
                        <div class="d-flex gap-1">
                            <div class="skeleton skeleton-button" style="width: 2rem;"></div>
                            <div class="skeleton skeleton-button" style="width: 2rem;"></div>
                            <div class="skeleton skeleton-button" style="width: 2rem;"></div>
                        </div>
                    </td>
                `;
                tableBodySkeleton.appendChild(skeletonRow);
            }
        }
        
        async function fetchStudentData() {
            showLoading();
            
            loadingSpinner.style.display = 'none';
            skeletonLoading.style.display = 'block';
            
            if (currentView === 'card') {
                cardViewSkeleton.style.display = 'block';
                tableViewSkeleton.style.display = 'none';
            } else {
                cardViewSkeleton.style.display = 'none';
                tableViewSkeleton.style.display = 'block';
            }
            
            try {
                const year = '{{year}}';
                const course = '{{course}}';
                
                const response = await fetch(`/v1/api/students/data?year=${year}&course=${course}`);
                
                if (!response.ok) {
                    throw new Error('Failed to fetch student data');
                }
                
                const data = await response.json();
                
                document.getElementById('totalStudents').textContent = data.studentsCount || '0';
                document.getElementById('maleStudents').textContent = data.maleStudentsCount || '0';
                document.getElementById('femaleStudents').textContent = data.femaleStudentsCount || '0';
                
                if (data.sortedStudents && data.sortedStudents.length > 0) {
                    students = data.sortedStudents;
                    filterStudents();
                    showToast('Students data loaded successfully', 'success');
                } else {
                    showEmpty();
                    showToast('No students found', 'info');
                }
            } catch (error) {
                console.error('Error fetching student data:', error);
                showEmpty();
                showToast('Failed to load students data. Please try again.', 'error');
            } finally {
                skeletonLoading.style.display = 'none';
            }
        }
        
        function filterStudents() {
            const gender = genderFilter.value;
            const search = searchInput.value.toLowerCase();
            
            filteredStudents = students.filter(student => {
                const matchesGender = gender === '' || student.gender === gender;
                const matchesSearch = search === '' || 
                    student.name.toLowerCase().includes(search) || 
                    student.studentId.toLowerCase().includes(search) ||
                    student.registerNumber.toLowerCase().includes(search) ||
                    student.email.toLowerCase().includes(search);
                
                return matchesGender && matchesSearch;
            });
            
            renderStudents();
        }
        
        function renderStudents() {
            if (filteredStudents.length === 0) {
                showEmpty();
                return;
            }
            
            hideLoading();
            emptyState.style.display = 'none';
            
            if (currentView === 'card') {
                renderCardView();
                cardView.style.display = 'block';
                tableView.style.display = 'none';
            } else {
                renderTableView();
                cardView.style.display = 'none';
                tableView.style.display = 'block';
            }
        }
        
        function renderCardView() {
            cardView.innerHTML = '';
            
            filteredStudents.forEach(student => {
                const card = document.createElement('div');
                card.className = 'student-card';
                
                const initials = getInitials(student.name);
                
                card.innerHTML = `
                    <div class="student-header">
                        <div class="student-info">
                            <div class="avatar">
                                ${student.imageUrl ? 
                                    `<img src="${student.imageUrl}" alt="${student.name}">` : 
                                    initials}
                            </div>
                            <div class="student-info-details">
                                <div class="student-name">${student.name}</div>
                                <div class="student-position">${student.course} - ${student.year} Year</div>
                            </div>
                        </div>
                        <span class="badge ${student.gender === 'Male' ? 'badge-male' : 'badge-female'}">${student.gender}</span>
                    </div>
                    <div class="student-details">
                        <div class="student-detail">
                            <span class="detail-label">Student ID</span>
                            <span class="detail-value">${student.studentId}</span>
                        </div>
                        <div class="student-detail">
                            <span class="detail-label">Register No</span>
                            <span class="detail-value">${student.registerNumber}</span>
                        </div>
                        <div class="student-detail">
                            <span class="detail-label">Date of Birth</span>
                            <span class="detail-value">${student.dob}</span>
                        </div>
                        <div class="student-detail">
                            <span class="detail-label">Phone</span>
                            <span class="detail-value">${student.phone}</span>
                        </div>
                        <div class="student-detail">
                            <span class="detail-label">Email</span>
                            <span class="detail-value">${student.email}</span>
                        </div>
                    </div>
                    <div class="student-actions">
                        <button class="btn btn-sm btn-primary view-details-btn" data-id="${student.studentId}">
                            <i class="fas fa-eye me-1"></i> View Details
                        </button>
                        <a href="/v1/api/studentEdit/${student._id}" class="btn btn-sm btn-warning">
                            <i class="fas fa-edit me-1"></i> Edit
                        </a>
                        <a href="/v1/api/studentDelete/${student._id}" class="btn btn-sm btn-danger" 
                           onclick="return confirm('Are you sure you want to delete this student?')">
                            <i class="fas fa-trash me-1"></i> Delete
                        </a>
                    </div>
                `;
                
                cardView.appendChild(card);
                
                const viewDetailsBtn = card.querySelector('.view-details-btn');
                viewDetailsBtn.addEventListener('click', () => showDetails(student.studentId));
            });
        }
        
        function renderTableView() {
            tableBody.innerHTML = '';
            
            filteredStudents.forEach((student, index) => {
                const row = document.createElement('tr');
                
                const initials = getInitials(student.name);
                
                row.innerHTML = `
                    <td>${index + 1}</td>
                    <td>
                        <div class="student-info">
                            <div class="avatar">
                                ${student.imageUrl ? 
                                    `<img src="${student.imageUrl}" alt="${student.name}">` : 
                                    initials}
                            </div>
                            <div class="student-info-details">
                                <div class="student-name">${student.name}</div>
                                <div class="student-position">${student.course} - ${student.year} Year</div>
                            </div>
                        </div>
                    </td>
                    <td>${student.studentId}</td>
                    <td>${student.registerNumber}</td>
                    <td><span class="badge ${student.gender === 'Male' ? 'badge-male' : 'badge-female'}">${student.gender}</span></td>
                    <td>${student.dob}</td>
                    <td>${student.phone}</td>
                    <td>${student.email}</td>
                    <td>
                        <div class="actions-cell">
                            <button class="action-btn view-btn" onclick="showDetails('${student.studentId}')" title="View Details">
                                <i class="fas fa-eye"></i>
                            </button>
                            <a href="/v1/api/studentEdit/${student._id}" class="action-btn edit-btn" title="Edit Student">
                                <i class="fas fa-edit"></i>
                            </a>
                            <a href="/v1/api/studentDelete/${student._id}" class="action-btn delete-btn" 
                               onclick="return confirm('Are you sure you want to delete this student?')" title="Delete Student">
                                <i class="fas fa-trash"></i>
                            </a>
                        </div>
                    </td>
                `;
                
                tableBody.appendChild(row);
            });
        }
        
        function showDetails(studentId) {
            const student = students.find(s => s.studentId === studentId);
            if (!student) return;
            
            let modalElement = document.getElementById(`modal-${studentId}`);
            
            if (!modalElement) {
                createStudentModal(student);
                modalElement = document.getElementById(`modal-${studentId}`);
            }
            
            const modal = new bootstrap.Modal(modalElement);
            modal.show();
        }
        
        function createStudentModal(student) {
            const modalsContainer = document.getElementById('modalsContainer');
            
            const modalDiv = document.createElement('div');
            modalDiv.className = 'modal fade';
            modalDiv.id = `modal-${student.studentId}`;
            modalDiv.setAttribute('tabindex', '-1');
            modalDiv.setAttribute('aria-hidden', 'true');
            
            const initials = getInitials(student.name);
            
            modalDiv.innerHTML = `
                <div class="modal-dialog modal-dialog-centered modal-xl">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">
                                <i class="fas fa-user-graduate"></i>
                                Student Details
                            </h5>
                            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"
                                aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <div class="student-profile">
                                <img src="${student.imageUrl || '/placeholder.svg?height=120&width=120'}" alt="Student Image" class="student-avatar">
                                <h4 class="student-name">${student.name}</h4>
                                <p class="student-id">${student.studentId} | ${student.registerNumber}</p>
                                ${student.gender === 'Male' ? 
                                    `<span class="student-badge" style="background-color: rgba(59, 130, 246, 0.1); color: #3b82f6;">
                                        <i class="fas fa-male"></i> Male
                                    </span>` : 
                                    `<span class="student-badge" style="background-color: rgba(236, 72, 153, 0.1); color: #ec4899;">
                                        <i class="fas fa-female"></i> Female
                                    </span>`
                                }
                            </div>

                            <!-- Tabs for better organization -->
                            <ul class="nav nav-tabs" id="studentTabs-${student.studentId}" role="tablist">
                                <li class="nav-item" role="presentation">
                                    <button class="nav-link active" id="personal-tab-${student.studentId}" data-bs-toggle="tab" 
                                            data-bs-target="#personal-${student.studentId}" type="button" role="tab" aria-selected="true">
                                        <i class="fas fa-id-card me-1"></i> Personal Info
                                    </button>
                                </li>
                                <li class="nav-item" role="presentation">
                                    <button class="nav-link" id="academic-tab-${student.studentId}" data-bs-toggle="tab" 
                                            data-bs-target="#academic-${student.studentId}" type="button" role="tab" aria-selected="false">
                                        <i class="fas fa-graduation-cap me-1"></i> Academic Info
                                    </button>
                                </li>
                                <li class="nav-item" role="presentation">
                                    <button class="nav-link" id="contact-tab-${student.studentId}" data-bs-toggle="tab" 
                                            data-bs-target="#contact-${student.studentId}" type="button" role="tab" aria-selected="false">
                                        <i class="fas fa-address-book me-1"></i> Contact & Family
                                    </button>
                                </li>
                            </ul>

                            <div class="tab-content p-3" id="studentTabContent-${student.studentId}">
                                <!-- Personal Information Tab -->
                                <div class="tab-pane fade show active" id="personal-${student.studentId}" role="tabpanel">
                                    <div class="row g-4">
                                        <div class="col-lg-6">
                                            <div class="student-info-card">
                                                <div class="student-info-header">
                                                    <h6 class="student-info-title">
                                                        <i class="fas fa-id-card"></i>
                                                        Personal Information
                                                    </h6>
                                                </div>
                                                <div class="student-info-body">
                                                    <table class="info-table">
                                                        <tr>
                                                            <th>Date of Birth</th>
                                                            <td>${student.dob}</td>
                                                        </tr>
                                                        <tr>
                                                            <th>Year</th>
                                                            <td>${student.course} - ${student.year}</td>
                                                        </tr>
                                                        <tr>
                                                            <th>Blood Group</th>
                                                            <td>${student.bloodGroup}</td>
                                                        </tr>
                                                        <tr>
                                                            <th>Religion</th>
                                                            <td>${student.religion}</td>
                                                        </tr>
                                                        <tr>
                                                            <th>Nationality</th>
                                                            <td>${student.nationality}</td>
                                                        </tr>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-lg-6">
                                            <div class="student-info-card">
                                                <div class="student-info-header">
                                                    <h6 class="student-info-title">
                                                        <i class="fas fa-info-circle"></i>
                                                        Other Information
                                                    </h6>
                                                </div>
                                                <div class="student-info-body">
                                                    <table class="info-table">
                                                        <tr>
                                                            <th>Transportation</th>
                                                            <td>${student.transportation}</td>
                                                        </tr>
                                                        <tr>
                                                            <th>Hostel Required</th>
                                                            <td>${student.hostelRequired}</td>
                                                        </tr>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Academic Information Tab -->
                                <div class="tab-pane fade" id="academic-${student.studentId}" role="tabpanel">
                                    <div class="student-info-card">
                                        <div class="student-info-header">
                                            <h6 class="student-info-title">
                                                <i class="fas fa-graduation-cap"></i>
                                                Academic Information
                                            </h6>
                                        </div>
                                        <div class="student-info-body">
                                            <table class="info-table">
                                                <tr>
                                                    <th>Previous Institution</th>
                                                    <td>${student.previousInstitution}</td>
                                                </tr>
                                                <tr>
                                                    <th>Previous Marks</th>
                                                    <td>${student.previousMarks}%</td>
                                                </tr>
                                                <tr>
                                                    <th>Total Fees</th>
                                                    <td>₹${student.totalFee}</td>
                                                </tr>
                                                <tr>
                                                    <th>Scholarship</th>
                                                    <td>${student.scholarship}</td>
                                                </tr>
                                                <tr>
                                                    <th>Bridge Course</th>
                                                    <td>${student.bridgeCourse}</td>
                                                </tr>
                                                <tr>
                                                    <th>Admission Date</th>
                                                    <td>${student.admissionDate}</td>
                                                </tr>
                                            </table>
                                        </div>
                                    </div>
                                </div>

                                <!-- Contact & Family Information Tab -->
                                <div class="tab-pane fade" id="contact-${student.studentId}" role="tabpanel">
                                    <div class="row g-4">
                                        <div class="col-lg-6">
                                            <div class="student-info-card">
                                                <div class="student-info-header">
                                                    <h6 class="student-info-title">
                                                        <i class="fas fa-address-book"></i>
                                                        Contact Information
                                                    </h6>
                                                </div>
                                                <div class="student-info-body">
                                                    <table class="info-table">
                                                        <tr>
                                                            <th>Email</th>
                                                            <td>${student.email}</td>
                                                        </tr>
                                                        <tr>
                                                            <th>Phone</th>
                                                            <td>${student.phone}</td>
                                                        </tr>
                                                        <tr>
                                                            <th>Aadhaar Number</th>
                                                            <td>${student.aadhaarNum}</td>
                                                        </tr>
                                                        <tr>
                                                            <th>Address</th>
                                                            <td>${student.address?.address || ''}</td>
                                                        </tr>
                                                        <tr>
                                                            <th>City</th>
                                                            <td>${student.address?.city || ''}</td>
                                                        </tr>
                                                        <tr>
                                                            <th>State</th>
                                                            <td>${student.address?.state || ''}</td>
                                                        </tr>
                                                        <tr>
                                                            <th>Pin Code</th>
                                                            <td>${student.address?.pinCode || ''}</td>
                                                        </tr>
                                                        <tr>
                                                            <th>Country</th>
                                                            <td>${student.address?.country || ''}</td>
                                                        </tr>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-lg-6">
                                            <div class="student-info-card">
                                                <div class="student-info-header">
                                                    <h6 class="student-info-title">
                                                        <i class="fas fa-users"></i>
                                                        Family Information
                                                    </h6>
                                                </div>
                                                <div class="student-info-body">
                                                    <table class="info-table">
                                                        <tr>
                                                            <th>Parent Name</th>
                                                            <td>${student.parentName}</td>
                                                        </tr>
                                                        <tr>
                                                            <th>Parent Phone</th>
                                                            <td>${student.parentPhone}</td>
                                                        </tr>
                                                        <tr>
                                                            <th>Parental Income</th>
                                                            <td>${student.parentalIncome}</td>
                                                        </tr>
                                                        <tr>
                                                            <th>Emergency Contact</th>
                                                            <td>${student.emergencyContact}</td>
                                                        </tr>
                                                        <tr>
                                                            <th>Relationship</th>
                                                            <td>${student.emergencyContactRelationship}</td>
                                                        </tr>
                                                        <tr>
                                                            <th>Emergency Phone</th>
                                                            <td>${student.emergencyPhone}</td>
                                                        </tr>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            <a href="/v1/api/studentEdit/${student._id}" class="btn btn-primary">
                                <i class="fas fa-edit me-1"></i> Edit Student
                            </a>
                        </div>
                    </div>
                </div>
            `;
            
            modalsContainer.appendChild(modalDiv);
        }
        
        function getInitials(name) {
            if (!name) return '';
            
            return name
                .split(' ')
                .map(word => word.charAt(0))
                .join('')
                .toUpperCase()
                .substring(0, 2);
        }
        
        function setActiveView(view) {
            currentView = view;
            
            viewToggleBtns.forEach(btn => {
                if (btn.getAttribute('data-view') === view) {
                    btn.classList.add('active');
                } else {
                    btn.classList.remove('active');
                }
            });
            
            if (isLoading) {
                if (view === 'card') {
                    cardViewSkeleton.style.display = 'block';
                    tableViewSkeleton.style.display = 'none';
                } else {
                    cardViewSkeleton.style.display = 'none';
                    tableViewSkeleton.style.display = 'block';
                }
            } else {
                renderStudents();
            }
        }
        
        function showLoading() {
            isLoading = true;
            loadingSpinner.style.display = 'flex';
            cardView.style.display = 'none';
            tableView.style.display = 'none';
            emptyState.style.display = 'none';
        }
        
        function hideLoading() {
            isLoading = false;
            loadingSpinner.style.display = 'none';
        }
        
        function showEmpty() {
            hideLoading();
            cardView.style.display = 'none';
            tableView.style.display = 'none';
            emptyState.style.display = 'flex';
        }
    </script>
</body>
</html>